<?xml version="1.0"?>
<!--

Sample K-3D XML document dynamically generated using the generate_schema_samples.py script - do not edit by hand!

This document is intended as an informal sample of the types of data that could be contained within a K-3D XML
document.  For a formal description of the K-3D XML schema, see k3d/docs/xml_schema/schema.xsd.  This document will
be updated from time-to-time as the list of available plugin types grows.  Keep in mind that the set of properties
for each plugin type may change as new features are added, and that some types (e.g. the RenderManXXXXXShader types)
will have varying sets of properties at runtime.  You do not have to specify every property for a node - sensible
defaults will be used at runtime.  The default values for properties are the ones shown here.

The node class attribute is a 128 bit universally unique number that unambiguously identifies plugin type.

Note that the node name attribute is the human-readable node name that is visible within the user interface -
node names are not guaranteed unique within a document!  Use the object id attribute if you need a unique identifier.

All data that is expressed using real-world units of measure use SI units.  All angles are measured in radians.

-->

<k3dml version="0.5.0.0" generator="generate_schema_samples.py">
	<document>
		<nodes>
			<!-- AlternateArray1D -->
			<node name="AlternateArray1D" id="1" class="172b9170 91d2449b aa057e85 afb2c01a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis1 -->
					<property name="axis1">x</property>
				</properties>
			</node>
			<!-- AlternateArray2D -->
			<node name="AlternateArray2D" id="2" class="172b9170 92d2449b aa057e85 afb2c01b">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis1 -->
					<property name="axis1">x</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis2 -->
					<property name="axis2">y</property>
				</properties>
			</node>
			<!-- AlternateArray3D -->
			<node name="AlternateArray3D" id="3" class="172b9170 93d2449b aa057e85 afb2c01c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis1 -->
					<property name="axis1">x</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis2 -->
					<property name="axis2">y</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis3 -->
					<property name="axis3">z</property>
				</properties>
			</node>
			<!-- Displays a normal -->
			<node name="AnnotateNormal" id="4" class="4a17ae9f 237c4c81 88dffdaf 96b6d095">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::vector3 Description: Normal -->
					<property name="normal">0.0 0.0 1.0</property>
					<!-- Type: k3d::color Description: Color -->
					<property name="color">1.0 1.0 1.0</property>
				</properties>
			</node>
			<!-- Displays text annotations in the 3D document, primarily for documentation / tutorials -->
			<node name="Annotation" id="5" class="951d3c20 e2f74d6d 8bc90ef8 9a8967b6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: std::string Description: Annotation text -->
					<property name="text">Annotation</property>
					<!-- Type: k3d::color Description: Annotation color -->
					<property name="color">0.0 0.0 0.0</property>
					<!-- Type: bool Description: Leader line -->
					<property name="leader">0</property>
					<!-- Type: k3d::matrix4 Description: Leader line target -->
					<property name="leader_target">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Displays 2D text annotations, primarily for documentation / tutorials -->
			<node name="Annotation2D" id="6" class="2ad16705 62f1410d bcc9800c fa93762e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: std::string Description: Annotation text -->
					<property name="text">Annotation</property>
					<!-- Type: k3d::color Description: Annotation color -->
					<property name="color">0.0 0.0 0.0</property>
					<!-- Type: double Description: X Position -->
					<property name="x">0.0</property>
					<!-- Type: double Description: Y Position -->
					<property name="y">0.0</property>
				</properties>
			</node>
			<!-- Encapsulates an Aqsis displacement shader layer -->
			<node name="AqsisDisplacementShaderLayer" id="7" class="1802dce3 71004329 80cbdf0e bc7f142c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: boost::filesystem::path Description: Shader Path -->
					<property name="shader_path"></property>
				</properties>
			</node>
			<!-- Encapsulates an Aqsis surface shader layer -->
			<node name="AqsisSurfaceShaderLayer" id="8" class="261e244e d82947ba 9e56a9af 03d4cc0f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: boost::filesystem::path Description: Shader Path -->
					<property name="shader_path"></property>
				</properties>
			</node>
			<!-- Configurable set of axes to help in visualizing the 3D workspace -->
			<node name="Axes" id="9" class="00000001 00000000 00000000 00000001">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: bool Description: Display XYZ axes -->
					<property name="axes">1</property>
					<!-- Type: bool Description: Display XY plane as a grid -->
					<property name="xyplane">1</property>
					<!-- Type: bool Description: Display YZ plane as a grid -->
					<property name="yzplane">0</property>
					<!-- Type: bool Description: Display XZ plane as a grid -->
					<property name="xzplane">0</property>
					<!-- Type: double Units: distance Description: The size of each grid square -->
					<property name="gridsize">2.0</property>
					<!-- Type: long Units: scalar Description: Number of squares along each grid -->
					<property name="gridcount">5</property>
				</properties>
			</node>
			<!-- Bends mesh points around an axis -->
			<node name="BendPoints" id="10" class="fd599b45 20384cd3 b0af634b 9372888a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: angle Description: Bend angle -->
					<property name="angle">0.0</property>
					<!-- Type: double Units: scalar Description: Bend tightness -->
					<property name="tightness">0.6</property>
					<!-- Type: double Units: scalar Description: Bend position -->
					<property name="position">0.5</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis to bend along -->
					<property name="along">z</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis to bend around -->
					<property name="around">x</property>
				</properties>
			</node>
			<!-- Bevels each selected face -->
			<node name="BevelFaces" id="11" class="c3ca122a 9e8b46dc a6649135 d68ac1a6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: distance Description: Offset along external edges -->
					<property name="offset">0.3</property>
					<!-- Type: double Units: distance Description: Inset of bevelled face -->
					<property name="inset">0.3</property>
					<!-- Type: bool Description: Use distance instead of edge offset -->
					<property name="distance">0</property>
					<!-- Type: bool Description: Select side faces on output, doesn't change selection if off -->
					<property name="select_side_faces">1</property>
				</properties>
			</node>
			<!-- Bevels a surface at each selected point -->
			<node name="BevelPoints" id="12" class="5a578576 c207453f a7a2b9ae fb1ad739">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: distance Description: Offset along external edges -->
					<property name="offset">0.3</property>
					<!-- Type: bool Description: Use distance instead of edge offset -->
					<property name="distance">0</property>
				</properties>
			</node>
			<!-- Add value to each pixel color component -->
			<node name="BitmapAdd" id="13" class="30d648f9 74844196 801a34f9 6ff15920">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: double Description: Add value to each pixel Red, Green and Blue component -->
					<property name="value">0.0</property>
				</properties>
			</node>
			<!-- Generates a checker-pattern bitmap -->
			<node name="BitmapChecker" id="14" class="8d65a65f 853e4460 bc2ecbad ce65b404">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output_bitmap"></property>
					<!-- Type: long Units: scalar Description: Bitmap width -->
					<property name="width">64</property>
					<!-- Type: long Units: scalar Description: Bitmap height -->
					<property name="height">64</property>
					<!-- Type: long Units: scalar Description: Check (rectangle) width -->
					<property name="check_width">8</property>
					<!-- Type: long Units: scalar Description: Check (rectangle) height -->
					<property name="check_height">8</property>
					<!-- Type: k3d::color Description: First check color -->
					<property name="color1">1.0 1.0 1.0</property>
					<!-- Type: k3d::color Description: Second check color -->
					<property name="color2">0.0 0.0 0.0</property>
				</properties>
			</node>
			<!-- Make any image black and white -->
			<node name="BitmapColorMonochrome" id="15" class="73cd5356 4d3d4eaf acda0d76 8070a016">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: double Description: Scale Red componnt value -->
					<property name="red_weight">0.3</property>
					<!-- Type: double Description: Scale Green component value -->
					<property name="green_weight">0.59</property>
					<!-- Type: double Description: Scale Blue component value -->
					<property name="blue_weight">0.11</property>
				</properties>
			</node>
			<!-- Loads a bitmap from the filesystem -->
			<node name="BitmapFileIn" id="16" class="00000001 00000000 00000000 00000003">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output_bitmap"></property>
					<!-- Type: boost::filesystem::path Description: Browse for an input bitmap -->
					<property name="file"></property>
				</properties>
			</node>
			<!-- Apply gamma value to each pixel -->
			<node name="BitmapGamma" id="17" class="a2ff08c9 96e54063 907ad507 ec36dd1c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: double Description: Apply gamma value to each pixel -->
					<property name="value">0.0</property>
				</properties>
			</node>
			<!-- Adding two images together -->
			<node name="BitmapImageAdd" id="18" class="4fff5852 7e1a4ebc bda939d8 e95e5712">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Similar to over, but the background matte is used -->
			<node name="BitmapImageAtop" id="19" class="b33ad57a 7df5452f 8654d2df 5c0d295a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Divide one image by another -->
			<node name="BitmapImageDivide" id="20" class="88f38816 86ff40a5 b3e3f012 5c6b8dc1">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Places one image inside the mask of another -->
			<node name="BitmapImageInside" id="21" class="947a3c32 74f7478f 9a55b697 67eded0a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Compares two images and use the pixel with the higher value -->
			<node name="BitmapImageMax" id="22" class="840931e8 fd154f4d bd285224 5e1eca7e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Compares two images and use the pixel with the lower value -->
			<node name="BitmapImageMin" id="23" class="9872aeba 4ee44f63 9fe63901 7dfd9e29">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Two images averaged together -->
			<node name="BitmapImageMix" id="24" class="6d3f3951 5f9a416f ae464e2a d8fdc947">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
					<!-- Type: double Description: Mixing percent between the two input bitmaps -->
					<property name="value">0.0</property>
				</properties>
			</node>
			<!-- Multiply one image by another -->
			<node name="BitmapImageMultiply" id="25" class="bd5304a2 ccd64c84 986cdbab 12573879">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Places one image only outside of the mask of another -->
			<node name="BitmapImageOutside" id="26" class="779124b1 38bf4c53 a9068d24 5a04ea48">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Lays image on top of another -->
			<node name="BitmapImageOver" id="27" class="fd5811d8 582d4fbb b7a16cbe 62d375f9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Mimics the effect of exposing two film negatives together -->
			<node name="BitmapImageScreen" id="28" class="2fb64552 56b64a8d bc92524b b84ce789">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Subtract one image from another -->
			<node name="BitmapImageSubtract" id="29" class="75a977ec 726c4b8f b499eded 9dfc7eb7">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Subtract absolute one imagefrom another -->
			<node name="BitmapImageSubtractAbs" id="30" class="02017eea 075c42ce ac5c32c5 e75da3bd">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Lays image beneath another -->
			<node name="BitmapImageUnder" id="31" class="2c4fc4be 00e74ae5 8b210160 0dd4b2d2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Somewhat a combination of Inside and Outside -->
			<node name="BitmapImageXOR" id="32" class="25498eeb 87e446d9 8701497c 390602c2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: A input bitmap -->
					<property name="input_a"></property>
					<!-- Type: k3d::bitmap* Description: B input bitmap -->
					<property name="input_b"></property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output"></property>
				</properties>
			</node>
			<!-- Gives bitmap a position -->
			<node name="BitmapInstance" id="33" class="9a247cdf ebcf4861 aa814c6f ed947b51">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: k3d::point3 Description: Position -->
					<property name="position">0.0 0.0 0.0</property>
					<!-- Type: k3d::point3 Description: Scale -->
					<property name="scale">1.0 1.0 1.0</property>
					<!-- Type: double Units: angle Description: Angle -->
					<property name="angle">0.0</property>
					<!-- Type: bool Description: Image is pre-multiplied -->
					<property name="premultiplied">1</property>
					<!-- Type: k3d::matrix4 Description: Color matrix -->
					<property name="color_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Inverts a bitmap -->
			<node name="BitmapInvert" id="34" class="b56232dd 3e204f04 83e2273c 3b0539ad">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
				</properties>
			</node>
			<!-- Create alpha channel using color difference -->
			<node name="BitmapMatteColorDiff" id="35" class="eefaccf2 65bc4c78 bd46cbdb 5ca5d3e2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: double Description: Set alpha channel using color difference -->
					<property name="value">0.0</property>
				</properties>
			</node>
			<!-- Inverts a bitmap's alpha channel -->
			<node name="BitmapMatteInvert" id="36" class="6856b0e9 36b645d9 b324d58b 624072e9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
				</properties>
			</node>
			<!-- Bitmap modifier that uses a script to modify an input bitmap -->
			<node name="BitmapModifierScript" id="37" class="e6ca5ca4 cfa8452f 8318b2aa e253956e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: std::string Description: Script that modifies input bitmap -->
					<property name="script">#python

import k3d

Output.assign(Input)

</property>
				</properties>
			</node>
			<!-- Multiply value of each pixel -->
			<node name="BitmapMultiply" id="38" class="03d2ac85 37af4255 956c0def 82c3c753">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: double Description: Multiply each pixel component with this value -->
					<property name="value">0.0</property>
				</properties>
			</node>
			<!-- Load sequence of bitmaps from the filesystem -->
			<node name="BitmapSequenceIn" id="39" class="23ec2e00 53064bed a5bf23d9 464a8db4">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output_bitmap"></property>
					<!-- Type: boost::filesystem::path Description: Path for bitmap sequence -->
					<property name="file_path"></property>
					<!-- Type: double Description: Bitmap change delay -->
					<property name="time">0.0</property>
				</properties>
			</node>
			<!-- Save sequence of bitmaps to the filesystem -->
			<node name="BitmapSequenceOut" id="40" class="38c86011 7ff04d55 a9401958 63612b6c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input"></property>
					<!-- Type: long Units: scalar Description: Output pixel width -->
					<property name="pixel_width">320</property>
					<!-- Type: long Units: scalar Description: Output pixel height -->
					<property name="pixel_height">240</property>
				</properties>
			</node>
			<!-- Set bitmap size by cropping or padding -->
			<node name="BitmapSize" id="41" class="c8a70bc7 eef04dc1 8b8a2001 6ab63b4a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: long Units: scalar Description: Output pixel width -->
					<property name="pixel_width">320</property>
					<!-- Type: long Units: scalar Description: Output pixel height -->
					<property name="pixel_height">240</property>
				</properties>
			</node>
			<!-- Generates a solid-color bitmap -->
			<node name="BitmapSolid" id="42" class="3e3b43f0 cd21465c 9c099aba 8dc117d8">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output_bitmap"></property>
					<!-- Type: long Units: scalar Description: Bitmap width -->
					<property name="width">64</property>
					<!-- Type: long Units: scalar Description: Bitmap height -->
					<property name="height">64</property>
					<!-- Type: k3d::color Description: Bitmap color -->
					<property name="color">1.0 1.0 1.0</property>
				</properties>
			</node>
			<!-- Bitmap source that uses a script to generate images -->
			<node name="BitmapSourceScript" id="43" class="98f6e0b6 8423400b a5ae9144 50e1c3cd">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Output bitmap -->
					<property name="output_bitmap"></property>
					<!-- Type: std::string Description: Script that generates a bitmap -->
					<property name="script">#python

import k3d

Output.reset(64, 64)
for x in range(64):
	for y in range(64):
		Output.set_pixel(x, y, k3d.color(1, 0, 0))

</property>
				</properties>
			</node>
			<!-- Subtract value from each pixel -->
			<node name="BitmapSubtract" id="44" class="51c8f52f 53834926 865e3592 f0d09510">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: double Description: Subtract value to each pixel color component -->
					<property name="value">0.0</property>
				</properties>
			</node>
			<!-- Cut off chanels at a certain value -->
			<node name="BitmapThreshold" id="45" class="cc8d625b 970d4293 a304d906 81201d28">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: double Description: Clamp Red channel to threshold -->
					<property name="red_threshold">0.0</property>
					<!-- Type: double Description: Clamp Green channel to threshold -->
					<property name="geen_threshold">0.0</property>
					<!-- Type: double Description: Clamp Blue channel to threshold -->
					<property name="blue_threshold">0.0</property>
					<!-- Type: double Description: Clamp Alpha channel to threshold -->
					<property name="alpha_threshold">0.0</property>
				</properties>
			</node>
			<!-- Blobby Add operator -->
			<node name="BlobbyAddOperator" id="46" class="580c8ebb 300d49dc 9c43cbf6 2808872a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh* Description: First addition operand (should be a blobby) -->
					<property name="input_mesh1"></property>
					<!-- Type: k3d::mesh* Description: Second addition operand (should be a blobby) -->
					<property name="input_mesh2"></property>
				</properties>
			</node>
			<!-- Blobby Div operator -->
			<node name="BlobbyDivOperator" id="47" class="f650ce52 2fc64539 a184ef26 03bbe6d7">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh* Description: Blobby dividend -->
					<property name="input_mesh1"></property>
					<!-- Type: k3d::mesh* Description: Blobby divisor -->
					<property name="input_mesh2"></property>
					<!-- Type: enumeration Values: ['division', 'reverse_division'] Description: Swap dividend and divisor -->
					<property name="division_type">division</property>
				</properties>
			</node>
			<!-- Creates a RenderMan Blobby Ellipsoid -->
			<node name="BlobbyEllipsoid" id="48" class="76ba2f7c d49945e2 a54d32b0 0f756a94">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: double Units: distance Description: Position on X axis -->
					<property name="x">0.0</property>
					<!-- Type: double Units: distance Description: Position on Y axis -->
					<property name="y">0.0</property>
					<!-- Type: double Units: distance Description: Position on Z axis -->
					<property name="z">0.0</property>
					<!-- Type: double Units: distance Description: Size on X axis -->
					<property name="size_x">1.0</property>
					<!-- Type: double Units: distance Description: Size on Y axis -->
					<property name="size_y">1.0</property>
					<!-- Type: double Units: distance Description: Size on Z axis -->
					<property name="size_z">1.0</property>
					<!-- Type: k3d::color Description: Ellipsoid color -->
					<property name="color">1.0 1.0 1.0</property>
				</properties>
			</node>
			<!-- Blobby Max operator -->
			<node name="BlobbyMaxOperator" id="49" class="4a8e2958 58d546aa ad7bfb37 5c67450b">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh* Description: First maximum operand (should be a blobby) -->
					<property name="input_mesh1"></property>
					<!-- Type: k3d::mesh* Description: Second maximum operand (should be a blobby) -->
					<property name="input_mesh2"></property>
				</properties>
			</node>
			<!-- Blobby Min operator -->
			<node name="BlobbyMinOperator" id="50" class="c8e5eabc 86f44610 8e2a647d 847de77a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh* Description: First minimum operand (should be a blobby) -->
					<property name="input_mesh1"></property>
					<!-- Type: k3d::mesh* Description: Second minimum operand (should be a blobby) -->
					<property name="input_mesh2"></property>
				</properties>
			</node>
			<!-- Blobby Mult operator -->
			<node name="BlobbyMultOperator" id="51" class="51777220 bf7346fc bf66e8bf 349853b9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh* Description: First multiplication operand (should be a blobby) -->
					<property name="input_mesh1"></property>
					<!-- Type: k3d::mesh* Description: Second multiplication operand (should be a blobby) -->
					<property name="input_mesh2"></property>
				</properties>
			</node>
			<!-- Creates a RenderMan Blobby Segment -->
			<node name="BlobbySegment" id="52" class="975d22ad e55e41a5 9fdb26d2 529952e0">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: double Units: distance Description: Segment radius -->
					<property name="radius">1.0</property>
					<!-- Type: double Units: distance Description: First segment end X position -->
					<property name="x1">0.0</property>
					<!-- Type: double Units: distance Description: First segment end Y position -->
					<property name="y1">0.0</property>
					<!-- Type: double Units: distance Description: First segment end Z position -->
					<property name="z1">0.0</property>
					<!-- Type: double Units: distance Description: Second segment end X position -->
					<property name="x2">3.0</property>
					<!-- Type: double Units: distance Description: Second segment end Y position -->
					<property name="y2">0.0</property>
					<!-- Type: double Units: distance Description: Second segment end Z position -->
					<property name="z2">0.0</property>
					<!-- Type: k3d::color Description: Segment color -->
					<property name="color">1.0 1.0 1.0</property>
				</properties>
			</node>
			<!-- Blobby Sub operator -->
			<node name="BlobbySubOperator" id="53" class="351e67c1 12034c4c 974516db bcb767d9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh* Description: Blobby subtrahend -->
					<property name="input_mesh1"></property>
					<!-- Type: k3d::mesh* Description: Blobby minuend -->
					<property name="input_mesh2"></property>
					<!-- Type: enumeration Values: ['subtraction', 'reverse_subtraction'] Description: Swap subtrahend and minuend -->
					<property name="subtraction_type">subtraction</property>
				</properties>
			</node>
			<!-- Creates new polygons bridging two sets of connected border edges -->
			<node name="BridgeEdges" id="54" class="a360bb82 223a46df 91e4b594 f9b6b7a3">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Creates new polygons forming a bridge between two selected polygons -->
			<node name="BridgeFaces" id="55" class="8e744389 5d284d38 95bb89cc 1b9e528e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Bulges mesh points around a point -->
			<node name="BulgePoints" id="56" class="b7002ece 8e6348f5 a99ce9b0 fbeba55f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: scalar Description: Bulge amount -->
					<property name="bulge_factor">1.0</property>
					<!-- Type: bool Description: Displace on X axis -->
					<property name="displace_x">1</property>
					<!-- Type: bool Description: Displace on Y axis -->
					<property name="displace_y">1</property>
					<!-- Type: bool Description: Displace on Z axis -->
					<property name="displace_z">1</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis to bulge along -->
					<property name="axis">z</property>
					<!-- Type: enumeration Values: ['linear', 'radial'] Description: Bulge type -->
					<property name="type">radial</property>
				</properties>
			</node>
			<!-- Camera -->
			<node name="Camera" id="57" class="45ce1872 af184b6d b391e136 0dcfe8b5">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Parent -->
					<property name="parent">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::inode* Description: Navigation Target -->
					<property name="navigation_target">0</property>
					<!-- Type: k3d::point3 Description: World target -->
					<property name="world_target">0.0 -5.0 0.0</property>
					<!-- Type: double Description: Target distance from camera position -->
					<property name="target_distance">5.0</property>
					<!-- Type: enumeration Values: ['', 'NTSC', 'Square', 'Full Camera Aperture', 'Academy Full Frame', 'Academy Projection', 'Academy Projection', 'Anamorphic Squeezed', 'Anamorphic Unsqueezed'] Description: Choose a predefined aspect ratio -->
					<property name="aspect_ratio"></property>
					<!-- Type: bool Description: Show viewing projection -->
					<property name="show_projection">0</property>
					<!-- Type: bool Description: Orthographic projection -->
					<property name="orthographic">0</property>
					<!-- Type: double Units: scalar Description: Left -->
					<property name="left">-0.666666666667</property>
					<!-- Type: double Units: scalar Description: Right -->
					<property name="right">0.666666666667</property>
					<!-- Type: double Units: scalar Description: Top -->
					<property name="top">0.5</property>
					<!-- Type: double Units: scalar Description: Bottom -->
					<property name="bottom">-0.5</property>
					<!-- Type: double Units: distance Description: Near Plane Distance -->
					<property name="near">1.0</property>
					<!-- Type: double Units: distance Description: Far Plane Distance -->
					<property name="far">1000.0</property>
					<!-- Type: double Units: scalar Description: Crop window left -->
					<property name="crop_window_left">0.0</property>
					<!-- Type: double Units: scalar Description: Crop Window Right -->
					<property name="crop_window_right">1.0</property>
					<!-- Type: double Units: scalar Description: Crop Window Top -->
					<property name="crop_window_top">0.0</property>
					<!-- Type: double Units: scalar Description: Crop window bottom -->
					<property name="crop_window_bottom">1.0</property>
					<!-- Type: bool Description: Show Reference Plane -->
					<property name="show_reference_plane">0</property>
					<!-- Type: double Units: distance Description: Reference Plane Distance -->
					<property name="reference_plane">0.0</property>
					<!-- Type: k3d::color Description: Reference Plane Color -->
					<property name="reference_plane_color">0.0 0.0 0.7</property>
				</properties>
			</node>
			<!-- Caps (fills) holes in a polyhedron -->
			<node name="CapHoles" id="58" class="d9900dbf 3d854a36 bd05a3eb 1379a89a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: bool Description: Cap holes (missing faces) in polyhedra -->
					<property name="cap_polyhedra">1</property>
					<!-- Type: bool Description: Cap holes in faces -->
					<property name="cap_faces">1</property>
				</properties>
			</node>
			<!-- Generates a Catmull-Clark subdivision mesh -->
			<node name="CatmullClark" id="59" class="dc73f6e3 744b4b51 ac535307 c82d261c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: long Units: scalar Description: Subdivision level -->
					<property name="level">1</property>
				</properties>
			</node>
			<!-- Centers mesh points around the origin -->
			<node name="CenterPoints" id="60" class="c030994f 97ed4165 9ac0b7f0 a777abbc">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: bool Description: Center X components around origin -->
					<property name="center_x">1</property>
					<!-- Type: bool Description: Center Y components around origin -->
					<property name="center_y">1</property>
					<!-- Type: bool Description: Center Z components around origin -->
					<property name="center_z">1</property>
				</properties>
			</node>
			<!-- Coarsens polygonal surfaces -->
			<node name="CoarsenPolyhedra" id="61" class="daae61bd d5b94f9b 90a54f79 f3f78729">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: enumeration Values: ['optimized', 'length', 'angle'] Description: Cost function (length, optimized, angle) -->
					<property name="cost_function">length</property>
					<!-- Type: enumeration Values: ['midvertex', 'volumeoptimized'] Description: Mid-vertex  or volume optimized -->
					<property name="midvertex_function">volumeoptimized</property>
					<!-- Type: enumeration Values: ['number', 'cost'] Description: Stop function (edge number or cost) -->
					<property name="stop_function">number</property>
					<!-- Type: double Units: angle Description: Maximum fold angle -->
					<property name="max_fold_angle">0.01745329252</property>
					<!-- Type: long Units: scalar Description: Final edge number -->
					<property name="edge_number">100</property>
					<!-- Type: double Units: scalar Description: Maximum edge cost -->
					<property name="max_edge_cost">1.0</property>
					<!-- Type: double Units: scalar Description: Weight used for volume optimization -->
					<property name="volume_weight">0.5</property>
					<!-- Type: double Units: scalar Description: Weight used for boundary optimization -->
					<property name="boundary_weight">0.5</property>
					<!-- Type: double Units: scalar Description: Weight used for shape optimization -->
					<property name="shape_weight">0.0</property>
				</properties>
			</node>
			<!-- For each selected edge, collapses its two vertices into one -->
			<node name="CollapseEdges" id="62" class="a5252071 a3484315 9c9daf1c 786042a3">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: enumeration Values: ['first_vertex', 'center', 'last_vertex'] Description: Collapse destination : first or second vertex, or middle -->
					<property name="vertex">center</property>
				</properties>
			</node>
			<!-- For each selected face, collapses its vertices to the centroid -->
			<node name="CollapseFaces" id="63" class="13f8a224 5e284ac4 b5b58ebd 10f65bb6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Provides a source object to link color properties to -->
			<node name="ColorProperty" id="64" class="ba815d69 003d4736 877cf38c c0497228">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::color Description: Outputs the value exposed by this property -->
					<property name="value">1.0 1.0 1.0</property>
				</properties>
			</node>
			<!-- Color source that uses a script to create the output value -->
			<node name="ColorSourceScript" id="65" class="24568302 346e4e58 bb700f09 5dc96245">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::color Description: Output color -->
					<property name="output_color">1.0 1.0 1.0</property>
					<!-- Type: std::string Description: Script that creates geometry -->
					<property name="script">#python

import k3d

Output = k3d.color(1, 1, 1)

</property>
				</properties>
			</node>
			<!-- Cone primitive -->
			<node name="Cone" id="66" class="00000001 00000000 00000000 00000064">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Units: distance Description: Base radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Cone height -->
					<property name="height">10.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Creates edges between selected vertices -->
			<node name="ConnectVertices" id="67" class="ee6b7115 edba43a2 92750f10 113355a5">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Constant-color viewport surface shader -->
			<node name="ConstantMaterial" id="68" class="de0ae4d5 1d8c4c89 b7b6507b 36138cad">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::color Description: Color -->
					<property name="color">1.0 1.0 1.0</property>
				</properties>
			</node>
			<!-- Cylinder primitive -->
			<node name="Cylinder" id="69" class="00000001 00000000 00000000 00000065">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Units: distance Description: Cylinder radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Bottom cap position -->
					<property name="zmin">-5.0</property>
					<!-- Type: double Units: distance Description: Top cap position -->
					<property name="zmax">5.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Cylindrical projection map -->
			<node name="CylinderMap" id="70" class="c9bfa2a1 e5c44f55 9dd23c3d c4370d49">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
				</properties>
			</node>
			<!-- Applies a wave function to points along an axis -->
			<node name="CylindricalWavePoints" id="71" class="fb3c4caf ec534256 96705718 f6e5ec41">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Wave points along given axis -->
					<property name="along">z</property>
					<!-- Type: double Units: distance Description: Wave amplitude -->
					<property name="amplitude">5.0</property>
					<!-- Type: double Units: distance Description: Wavelength -->
					<property name="wavelength">10.0</property>
					<!-- Type: double Units: angle Description: Wave phase -->
					<property name="phase">0.0</property>
				</properties>
			</node>
			<!-- Deletes selected faces, edges and vertices -->
			<node name="Delete" id="72" class="c98c37d5 a50c43c7 b88c3687 73cd3c4d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Disk primitive -->
			<node name="Disk" id="73" class="00000001 00000000 00000000 00000066">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Units: distance Description: Disk radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Disk position -->
					<property name="height">0.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Dissolves selected faces, edges and vertices -->
			<node name="Dissolve" id="74" class="6c639ea2 6ab542c2 a8f2f2d6 f5265e7c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Converts input edges to segment blobbies -->
			<node name="EdgesToBlobby" id="75" class="c6a00316 72a54b1a b9ac478e 00fdfc6c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: double Units: scalar Description: Segments radius -->
					<property name="radius">1.0</property>
					<!-- Type: enumeration Values: ['addition', 'multiplication', 'minimum', 'maximum'] Description: Addition, multiplication, minimum or maximum -->
					<property name="type">maximum</property>
				</properties>
			</node>
			<!-- Extrudes selected faces along their normals -->
			<node name="ExtrudeFaces" id="76" class="dbd23c4e 7119478c 9ab2ee83 5b56d527">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: distance Description: Distance between original and new faces -->
					<property name="distance">1.0</property>
					<!-- Type: long Units: scalar Description: Segment number between original and new faces -->
					<property name="segments">1</property>
					<!-- Type: double Units: distance Description: Inset value for the new faces -->
					<property name="inset">0.0</property>
					<!-- Type: enumeration Values: ['inside', 'outside'] Description: Extrusion direction : inside / outside -->
					<property name="direction">inside</property>
					<!-- Type: bool Description: Extrude neighbour faces as a single one (named a region) -->
					<property name="region">1</property>
					<!-- Type: bool Description: For region extrusion use the average normal; else each face is extrude along its own normal -->
					<property name="group_normals">0</property>
					<!-- Type: bool Description: Add back face when possible -->
					<property name="back_face">1</property>
					<!-- Type: bool Description: Select side faces on output -->
					<property name="select_side_faces">0</property>
				</properties>
			</node>
			<!-- Face normals -->
			<node name="FaceNormals" id="77" class="b5cd532b 6ebd4848 86a72136 e25151eb">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: bool Description: Normalize normals -->
					<property name="normalize">0</property>
					<!-- Type: double Units: scalar Description: Scale normals -->
					<property name="normals_scale">1.0</property>
				</properties>
			</node>
			<!-- Fills holes by creating polygons containing selected border edges -->
			<node name="FillSelectedHoles" id="78" class="34524730 7ba14abf b1922641 f64c68ce">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Creates rounded surfaces along selected edges -->
			<node name="FilletEdges" id="79" class="29672638 932544bb a6b229a9 ca30dfc2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: long Units: scalar Description: Segment number -->
					<property name="segments">4</property>
					<!-- Type: double Units: distance Description: Fillet radius -->
					<property name="radius">0.3</property>
				</properties>
			</node>
			<!-- Filter faces by color -->
			<node name="FilterFacesByColor" id="80" class="1efa74fc 6e5d4ab8 9110d288 dbb975ed">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: long Units: scalar Description: Color number in the virtual color list -->
					<property name="color_number">1</property>
				</properties>
			</node>
			<!-- Reverses the orientation of selected polygons -->
			<node name="FlipOrientation" id="81" class="7d95cd84 ee5a4ad6 86feab94 cbea91ca">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Converts a scalar to a string using printf() style formatting -->
			<node name="FormatScalar" id="82" class="3af7d777 691d41b0 aa801d59 7ee4180e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: Float value -->
					<property name="input">0.0</property>
					<!-- Type: std::string Description: Format string, printf() like -->
					<property name="format">%f</property>
					<!-- Type: std::string Description: Output string (read only) -->
					<property name="output">0.000000</property>
				</properties>
			</node>
			<!-- Converts a scalar to a string using strftime()-style formatting -->
			<node name="FormatTime" id="83" class="40d699fb eb12444f a84df477 5cca00f9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: Timestamp value, or 0 to use current system time -->
					<property name="input">0.0</property>
					<!-- Type: std::string Description: strftime() format string -->
					<property name="format">%H:%M:%S</property>
					<!-- Type: std::string Description: strftime() output string (read only) -->
					<property name="output">00:00:00</property>
				</properties>
			</node>
			<!-- Freezes its input for manual editing -->
			<node name="FrozenMesh" id="84" class="305ceb88 7cf34870 8b5e673c 636beab9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
				</properties>
			</node>
			<!-- Freezes the defined parameter -->
			<node name="FrozenParameter" id="85" class="1e43c5b3 b3db4dc0 9f63027e 6cd015fd">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: double Units: scalar Description: Parameter value -->
					<property name="value">10.0</property>
				</properties>
			</node>
			<!-- Freezes the selection defined by its input -->
			<node name="FrozenSelection" id="86" class="ac9b1faf 28ed4b34 8ad9e556 da333f81">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Stores an arbitrary transformation matrix -->
			<node name="FrozenTransformation" id="87" class="6ea85710 90da4d35 acec30ee a6aacb9d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Transformation matrix -->
					<property name="matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output matrix (read only) -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Merges polygonal surfaces using boolean operations -->
			<node name="GTSBoolean" id="88" class="bb8e6fcc 573245c3 b6166c7e e4f06b86">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: enumeration Values: ['intersection', 'union', 'difference', 'reverse_difference'] Description: Boolean operation (intersection, union, difference, reverse difference) -->
					<property name="type">intersection</property>
					<!-- Type: k3d::mesh* Description: Input mesh 1 -->
					<property name="input1"></property>
					<!-- Type: k3d::mesh* Description: Input mesh 2 -->
					<property name="input2"></property>
				</properties>
			</node>
			<!-- Technical illustration shader -->
			<node name="GoochMaterial" id="89" class="1ca37321 55684731 9b170005 2682e232">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::color Description: Diffuse Color -->
					<property name="diffuse_color">1.0 1.0 1.0</property>
					<!-- Type: k3d::color Description: Warm Color -->
					<property name="warm_color">1.0 1.0 0.8</property>
					<!-- Type: k3d::color Description: Cool Color -->
					<property name="cool_color">0.8 0.8 1.0</property>
				</properties>
			</node>
			<!-- GraphViz Render Engine -->
			<node name="GraphVizEngine" id="90" class="be72cb50 011f41d8 90449ae0 4c24ace5">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: std::string Description: Render engine name -->
					<property name="render_engine">dot</property>
				</properties>
			</node>
			<!-- Grows the selection to include adjacent vertices, edges and faces -->
			<node name="GrowSelection" id="91" class="ff5b603d 176a4def a4f195fd 30a7ec15">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Hyperboloid primitive -->
			<node name="Hyperboloid" id="92" class="00000001 00000000 00000000 00000067">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Units: distance Description: From RenderMan specification -->
					<property name="x1">5.0</property>
					<!-- Type: double Units: distance Description: From RenderMan specification -->
					<property name="y1">-5.0</property>
					<!-- Type: double Units: distance Description: From RenderMan specification -->
					<property name="z1">-5.0</property>
					<!-- Type: double Units: distance Description: From RenderMan specification -->
					<property name="x2">5.0</property>
					<!-- Type: double Units: distance Description: From RenderMan specification -->
					<property name="y2">5.0</property>
					<!-- Type: double Units: distance Description: From RenderMan specification -->
					<property name="z2">5.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Merge selected points into one point, positioned at the average position of the selected points. -->
			<node name="JoinPoints" id="93" class="915ba4d4 d4154a12 938bec97 60f819f3">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Mesh source that loads external K-3D XML (.k3d) files into the document by reference -->
			<node name="K3DMeshInput" id="94" class="7dd19499 965e4c06 b970f545 0e47855d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: boost::filesystem::path Description: Input file -->
					<property name="file"></property>
				</properties>
			</node>
			<!-- Mesh sink that saves K-3D XML (.k3d) files -->
			<node name="K3DMeshOutput" id="95" class="efdcb347 0e984075 87973a80 ca8b196d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: boost::filesystem::path Description: Output file -->
					<property name="file"></property>
				</properties>
			</node>
			<!-- Generates a PQ-knot curve -->
			<node name="KnotCurve" id="96" class="b39c53a3 e2fe0e32 21d09384 c4ed13fe">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Number of edges building up the curve -->
					<property name="edgecount">100</property>
					<!-- Type: long Units: scalar Description: Number of meridian wraps -->
					<property name="meridianwraps">3</property>
					<!-- Type: long Units: scalar Description: Number of longitudinal wraps -->
					<property name="longitudinalwraps">4</property>
					<!-- Type: double Units: distance Description: Knot scale -->
					<property name="scale">5.0</property>
					<!-- Type: double Units: distance Description: Curve width -->
					<property name="width">0.1</property>
					<!-- Type: bool Description: Closed curve (loop) -->
					<property name="closed">1</property>
				</properties>
			</node>
			<!-- Generates an L-System object from a configuration file -->
			<node name="LSystemParser" id="97" class="a637e99d 707c4342 8c6d4d15 78c9054a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: boost::filesystem::path Description: File path for lsystem description -->
					<property name="file">/home/tshead/k3d/share/lsystem/abop-nested-polygon-leaves.ls</property>
					<!-- Type: double Units: scalar Description: Growth value -->
					<property name="growth">20.0</property>
					<!-- Type: double Units: scalar Description: Basic angle -->
					<property name="basic_angle">7.0</property>
					<!-- Type: double Units: scalar Description: Thickness -->
					<property name="thickness">50.0</property>
					<!-- Type: long Units: scalar Description: Random seed -->
					<property name="random_seed">0</property>
					<!-- Type: double Units: scalar Description: Size -->
					<property name="size">5.0</property>
					<!-- Type: bool Description: Closed form -->
					<property name="closed_form">1</property>
					<!-- Type: long Units: scalar Description: Mutations -->
					<property name="mutations">0</property>
					<!-- Type: long Units: scalar Description: Mutation seed -->
					<property name="mutation_seed">0</property>
					<!-- Type: long Units: scalar Description: Max stack size -->
					<property name="max_stack_size">1000</property>
					<!-- Type: enumeration Values: ['-x', '+x', '-y', '+y', '-z', '+z'] Description: Orientation type (forward or backward along X, Y or Z axis) -->
					<property name="orientation">+z</property>
					<!-- Type: bool Description: Flip normals in case the faces are reversed -->
					<property name="flip_normals">0</property>
				</properties>
			</node>
			<!-- Applies a linear noise offset to mesh points -->
			<node name="LinearPointNoise" id="98" class="bbcaf2e7 c45346bf 9dfd92f2 fb9e6d68">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: bool Description: Add noise on X components -->
					<property name="use_x">1</property>
					<!-- Type: bool Description: Add noise on Y components -->
					<property name="use_y">1</property>
					<!-- Type: bool Description: Add noise on Z components -->
					<property name="use_z">1</property>
					<!-- Type: bool Description: Apply offset on X component -->
					<property name="move_x">1</property>
					<!-- Type: bool Description: Apply offset on Y component -->
					<property name="move_y">1</property>
					<!-- Type: bool Description: Apply offset on Z component -->
					<property name="move_z">1</property>
					<!-- Type: double Units: scalar Description: X Frequency -->
					<property name="frequency_x">1.0</property>
					<!-- Type: double Units: scalar Description: Y Frequency -->
					<property name="frequency_y">1.0</property>
					<!-- Type: double Units: scalar Description: Z Frequency -->
					<property name="frequency_z">1.0</property>
					<!-- Type: double Units: distance Description: X Offset -->
					<property name="offset_x">0.0</property>
					<!-- Type: double Units: distance Description: Y Offset -->
					<property name="offset_y">0.0</property>
					<!-- Type: double Units: distance Description: Z Offset -->
					<property name="offset_z">0.0</property>
					<!-- Type: double Units: distance Description: X Amplitude -->
					<property name="amplitude_x">1.0</property>
					<!-- Type: double Units: distance Description: Y Amplitude -->
					<property name="amplitude_y">1.0</property>
					<!-- Type: double Units: distance Description: Z Amplitude -->
					<property name="amplitude_z">1.0</property>
				</properties>
			</node>
			<!-- Applies a wave function to points along an axis -->
			<node name="LinearWavePoints" id="99" class="8053da77 ef6743cd 9d60f12a 63d1fdc7">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Axis -->
					<property name="axis">z</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Along -->
					<property name="along">x</property>
					<!-- Type: double Units: distance Description: Amplitude -->
					<property name="amplitude">1.0</property>
					<!-- Type: double Units: distance Description: Wavelength -->
					<property name="wavelength">10.0</property>
					<!-- Type: double Units: angle Description: Phase -->
					<property name="phase">0.0</property>
				</properties>
			</node>
			<!-- Generates a lissajous (sine-wave) curve -->
			<node name="LissajousCurve" id="100" class="7fdcbdc1 d1c6404e ae15a8eb 45ffc793">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Edge count -->
					<property name="edgecount">100</property>
					<!-- Type: double Units: distance Description: Modulation amplitude -->
					<property name="mamp">0.0</property>
					<!-- Type: double Units: scalar Description: Modulation frequency -->
					<property name="mfreq">20.0</property>
					<!-- Type: double Units: angle Description: Modulation phase -->
					<property name="mphase">0.0</property>
					<!-- Type: double Units: distance Description: X amplitude -->
					<property name="xamp">5.0</property>
					<!-- Type: double Units: scalar Description: X frequency -->
					<property name="xfreq">1.0</property>
					<!-- Type: double Units: angle Description: X phase -->
					<property name="xphase">0.0</property>
					<!-- Type: double Units: distance Description: Y amplitude -->
					<property name="yamp">5.0</property>
					<!-- Type: double Units: scalar Description: Y frequency -->
					<property name="yfreq">1.0</property>
					<!-- Type: double Units: angle Description: Y phase -->
					<property name="yphase">1.57079632679</property>
					<!-- Type: double Units: distance Description: Z amplitude -->
					<property name="zamp">0.0</property>
					<!-- Type: double Units: scalar Description: Z frequency -->
					<property name="zfreq">1.0</property>
					<!-- Type: double Units: angle Description: Z phase -->
					<property name="zphase">0.0</property>
					<!-- Type: double Units: distance Description: Curve width -->
					<property name="width">0.1</property>
					<!-- Type: bool Description: Closed curve (loop) -->
					<property name="closed">1</property>
				</properties>
			</node>
			<!-- Long source that uses a script to create the output value -->
			<node name="LongSourceScript" id="101" class="024b737a df144dca b29e32b4 319e5466">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: long Description: Output long -->
					<property name="output_long">0</property>
					<!-- Type: std::string Description: Script that creates geometry -->
					<property name="script">#python

Output = 0

</property>
				</properties>
			</node>
			<!-- Orients a transformation matrix to look at another -->
			<node name="LookAt" id="102" class="4e2a30f5 6d7d47ad 943ccd36 4b305b55">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Target matrix -->
					<property name="target_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Read only -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Converts input quadrilaterals to bilinear patches -->
			<node name="MakeBilinearPatches" id="103" class="e99f3672 6e85457d 9ce1f9dc 6bb71691">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
				</properties>
			</node>
			<!-- Subdivides the faces around creases for SDS rendering -->
			<node name="MakeCreases" id="104" class="f50fe5b6 ecfa4df3 8474a557 bee303ba">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
				</properties>
			</node>
			<!-- Converts input polyhedra to SDS surfaces -->
			<node name="MakeSDS" id="105" class="6550aef5 efd24248 8833eeab a267191e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: bool Description: Render sharp boundaries on the resulting subdivision surface -->
					<property name="interpolateboundary">1</property>
				</properties>
			</node>
			<!-- Material -->
			<node name="Material" id="106" class="00000001 00000002 00000003 00000004">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: OpenGL Material -->
					<property name="gl_material">0</property>
					<!-- Type: k3d::inode* Description: RenderMan Material -->
					<property name="ri_material">0</property>
					<!-- Type: k3d::inode* Description: Yafray Material -->
					<property name="yafray_material">0</property>
				</properties>
			</node>
			<!-- Merges two meshes into one -->
			<node name="MergeMesh" id="107" class="50aef311 f5264da2 9c5995e8 dc2e4ddf">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh* Description: First mesh to merge -->
					<property name="input_mesh1"></property>
					<!-- Type: k3d::mesh* Description: Second mesh to merge -->
					<property name="input_mesh2"></property>
					<!-- Type: bool Description: Merge meshes in a single polyhedron -->
					<property name="same_polyhedron">1</property>
				</properties>
			</node>
			<!-- Makes copies of a mesh along one dimension -->
			<node name="MeshArray1D" id="108" class="15e5e4e3 80144246 b8b43558 cd361180">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: long Units: scalar Description: Number of mesh copies -->
					<property name="count">5</property>
				</properties>
			</node>
			<!-- Makes copies of a mesh along two dimensions -->
			<node name="MeshArray2D" id="109" class="4818d995 f8664006 ba02ded4 8cb9defb">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: long Units: scalar Description: Number of mesh copies -->
					<property name="count1">5</property>
					<!-- Type: long Units: scalar Description: Number of mesh copies -->
					<property name="count2">5</property>
				</properties>
			</node>
			<!-- Makes copies of a mesh along three dimensions -->
			<node name="MeshArray3D" id="110" class="29bb292a 421647be 99236f5c 3407fe41">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: long Units: scalar Description: Number of mesh copies -->
					<property name="count1">5</property>
					<!-- Type: long Units: scalar Description: Number of mesh copies -->
					<property name="count2">5</property>
					<!-- Type: long Units: scalar Description: Number of mesh copies -->
					<property name="count3">5</property>
				</properties>
			</node>
			<!-- Renders an instance of a geometric mesh -->
			<node name="MeshInstance" id="111" class="2c1d60a6 863541a1 bd649bd1 1ea8ae24">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Parent -->
					<property name="parent">0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: bool Description: Use OpenGL display lists for performance (temporary) -->
					<property name="display_lists">1</property>
					<!-- Type: bool Description: Show blobbies surfaces -->
					<property name="blobby_surface">1</property>
					<!-- Type: enumeration Values: ['default', 'polygons', 'catmull-clark'] Description: Type is : default / polygons / Catmull-Clark -->
					<property name="polyhedron_render_type">default</property>
					<!-- Type: enumeration Values: ['none', 'point', 'bounding-box'] Description: Preview mesh using a proxy for performance -->
					<property name="proxy_type">none</property>
					<!-- Type: bool Description: Show SDS Surfaces -->
					<property name="preview_sds">1</property>
					<!-- Type: bool Description: Experimental NURBS SDS Preview -->
					<property name="nurbs_sds">0</property>
					<!-- Type: bool Description: Show SDS creases -->
					<property name="sds_crease">0</property>
					<!-- Type: bool Description: Show SDS patch borders -->
					<property name="sds_borders">1</property>
					<!-- Type: int Units: scalar Description: Subdivision Level -->
					<property name="sds_level">2</property>
					<!-- Type: int Units: scalar Description: Subdivision Level for renderers not supporting SDS natively -->
					<property name="sds_render_level">3</property>
					<!-- Type: k3d::color Description: Instance color -->
					<property name="color">0.0 0.0 0.0</property>
					<!-- Type: k3d::color Description: Instance selected color -->
					<property name="selected_color">1.0 0.0 0.0</property>
					<!-- Type: bool Description: Draw mesh points -->
					<property name="draw_points">1</property>
					<!-- Type: bool Description: Draw mesh edges -->
					<property name="draw_edges">1</property>
					<!-- Type: bool Description: Draw mesh faces -->
					<property name="draw_faces">1</property>
					<!-- Type: bool Description: Draw mesh linear curves -->
					<property name="draw_linear_curves">1</property>
					<!-- Type: bool Description: Draw mesh cubic curves -->
					<property name="draw_cubic_curves">1</property>
					<!-- Type: bool Description: Draw mesh NURBS curves -->
					<property name="draw_nucurves">1</property>
					<!-- Type: bool Description: Draw mesh points -->
					<property name="draw_bilinear_patches">1</property>
					<!-- Type: bool Description: Draw mesh bicubic patches -->
					<property name="draw_bicubic_patches">1</property>
					<!-- Type: bool Description: Draw mesh NURBS patches -->
					<property name="draw_nupatches">1</property>
					<!-- Type: bool Description: Draw mesh blobbies -->
					<property name="draw_blobbies">1</property>
					<!-- Type: bool Description: Draw two sided faces -->
					<property name="draw_two_sided">0</property>
					<!-- Type: k3d::mesh* Description: Transformed Output Mesh -->
					<property name="transformed_output_mesh"></property>
					<!-- Type: bool Description: Show component selection -->
					<property name="show_component_selection">0</property>
				</properties>
			</node>
			<!-- Mesh modifier that uses a script to modify geometry -->
			<node name="MeshModifierScript" id="112" class="d51fe8e4 5aad4790 82957933 b22c1c1c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: std::string Description: Script that modifies input geometry -->
					<property name="script">#python

import k3d

k3d.deep_copy(Input, Output)

</property>
				</properties>
			</node>
			<!-- Mesh source that uses a script to create geometry -->
			<node name="MeshSourceScript" id="113" class="c68d0187 bb334026 b4ca6a9f 0d980cc9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: std::string Description: Script that creates geometry -->
					<property name="script">#python

positions = ((-5, -5, 0), (5, -5, 0), (5, 5, 0), (-5, 5, 0))
points = []
for position in positions:
	points.append(Output.new_point(position))
polyhedron = Output.new_polyhedron()
edges = []
for point in points:
	edges.append(polyhedron.new_edge(point))
for i in range(len(edges)):
	edges[i].face_clockwise = edges[(i+1)%len(edges)]
face = polyhedron.new_face(edges[0])
</property>
				</properties>
			</node>
			<!-- Displays statistics about the input mesh -->
			<node name="MeshStats" id="114" class="5e9aae8e c73345c1 932bfe88 b912bbf1">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: unsigned long Description: Point count -->
					<property name="point_count">0</property>
					<!-- Type: unsigned long Description: Polyhedron count -->
					<property name="polyhedron_count">0</property>
					<!-- Type: unsigned long Description: Edge count -->
					<property name="edge_count">0</property>
					<!-- Type: unsigned long Description: Face count -->
					<property name="face_count">0</property>
					<!-- Type: unsigned long Description: Linear curve group count -->
					<property name="linear_curve_group_count">0</property>
					<!-- Type: unsigned long Description: Linear curve count -->
					<property name="linear_curve_count">0</property>
					<!-- Type: unsigned long Description: Cubic curve group count -->
					<property name="cubic_curve_group_count">0</property>
					<!-- Type: unsigned long Description: Cubic curve count -->
					<property name="cubic_curve_count">0</property>
					<!-- Type: unsigned long Description: Nucurve group count -->
					<property name="nucurve_group_count">0</property>
					<!-- Type: unsigned long Description: Nucurve count -->
					<property name="nucurve_count">0</property>
					<!-- Type: unsigned long Description: Bilinear patch count -->
					<property name="bilinear_patch_count">0</property>
					<!-- Type: unsigned long Description: Bicubic Patch Count -->
					<property name="bicubic_patch_count">0</property>
					<!-- Type: unsigned long Description: Nupatch Count -->
					<property name="nupatch_count">0</property>
				</properties>
			</node>
			<!-- Changes the first edge for selected polygons -->
			<node name="MoveFirstEdge" id="115" class="81c766ed 2cb943c7 91e9e680 eba9bc4b">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: long Units: scalar Description: Face distance -->
					<property name="distance">0</property>
				</properties>
			</node>
			<!-- Generates Newell primitives as Bezier patches -->
			<node name="Newell" id="116" class="274c0cae 2efd5bbf 986a500f ff5e2de6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: enumeration Values: ['teapot', 'teacup', 'teaspoon'] Description: Primitive type (teapot, teacup or teaspoon -->
					<property name="type">teapot</property>
					<!-- Type: double Units: scalar Description: Primitive size (scale) -->
					<property name="size">1.0</property>
				</properties>
			</node>
			<!-- Empty node -->
			<node name="Null" id="117" class="e1cbc7e2 f4b44daf 9176080c 80d2c4ab">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
				</properties>
			</node>
			<!-- Script node that executes whenever one of its inputs changes -->
			<node name="NullOutputScript" id="118" class="16b6b2f1 383d4d2c 9bea5eb3 94a8783f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: std::string Description: Script source code -->
					<property name="script">#python



</property>
				</properties>
			</node>
			<!-- Generates a NURBS circle -->
			<node name="NurbsCircle" id="119" class="82c3a0ef 4e074f5c b3926e7f b725b571">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: angle Description: End angle -->
					<property name="thetamax">6.2831853072</property>
					<!-- Type: long Units: scalar Description: Segments -->
					<property name="u_segments">4</property>
				</properties>
			</node>
			<!-- Generates a NURBS cone -->
			<node name="NurbsCone" id="120" class="5c7b8a12 bbb5477f b1428844 894f550b">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Height -->
					<property name="height">10.0</property>
					<!-- Type: double Units: angle Description: End angle -->
					<property name="thetamax">6.2831853072</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="u_segments">4</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="v_segments">2</property>
				</properties>
			</node>
			<!-- Generates a NURBS cylinder -->
			<node name="NurbsCylinder" id="121" class="756958ae 6932432f 854adf09 262c2da2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: ZMax -->
					<property name="zmax">5.0</property>
					<!-- Type: double Units: distance Description: ZMin -->
					<property name="zmin">-5.0</property>
					<!-- Type: double Units: angle Description: End angle -->
					<property name="thetamax">6.2831853072</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="u_segments">4</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="v_segments">2</property>
				</properties>
			</node>
			<!-- Generates a NURBS disk -->
			<node name="NurbsDisk" id="122" class="86471cfb 7b5742bb 96bccf97 cbb126e6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Height -->
					<property name="height">0.0</property>
					<!-- Type: double Units: angle Description: End angle -->
					<property name="thetamax">6.2831853072</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="u_segments">4</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="v_segments">2</property>
				</properties>
			</node>
			<!-- Generates a NURBS grid -->
			<node name="NurbsGrid" id="123" class="5aac4e72 f9b04b61 f8b1bdbc 851cf62e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: U Order -->
					<property name="u_order">4</property>
					<!-- Type: long Units: scalar Description: V Order -->
					<property name="v_order">4</property>
					<!-- Type: long Units: scalar Description: Columns -->
					<property name="u_segments">1</property>
					<!-- Type: long Units: scalar Description: Rows -->
					<property name="v_segments">1</property>
					<!-- Type: double Units: distance Description: Width -->
					<property name="width">10.0</property>
					<!-- Type: double Units: distance Description: Height -->
					<property name="height">10.0</property>
				</properties>
			</node>
			<!-- Generates a NURBS hyperboloid -->
			<node name="NurbsHyperboloid" id="124" class="b653277c 7bba4505 babcd65d 591ecedf">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: x1 -->
					<property name="x1">5.0</property>
					<!-- Type: double Units: distance Description: y1 -->
					<property name="y1">-5.0</property>
					<!-- Type: double Units: distance Description: z1 -->
					<property name="z1">-5.0</property>
					<!-- Type: double Units: distance Description: x2 -->
					<property name="x2">5.0</property>
					<!-- Type: double Units: distance Description: y2 -->
					<property name="y2">5.0</property>
					<!-- Type: double Units: distance Description: z2 -->
					<property name="z2">5.0</property>
					<!-- Type: double Units: angle Description: thetamax -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Generates a NURBS paraboloid -->
			<node name="NurbsParaboloid" id="125" class="571a61d0 272349da b4460a4f 025378a6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Maximum point position -->
					<property name="zmax">10.0</property>
					<!-- Type: double Units: distance Description: Origin position -->
					<property name="zmin">0.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Generates a NURBS polygon -->
			<node name="NurbsPolygon" id="126" class="49796f52 2e29f346 bd47e3c9 fb899a81">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Sides -->
					<property name="u_segments">4</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
				</properties>
			</node>
			<!-- Generates a NURBS sphere -->
			<node name="NurbsSphere" id="127" class="082eeef0 837f4277 a7c21ff1 839b286e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: ZMax -->
					<property name="zmax">1.0</property>
					<!-- Type: double Units: distance Description: ZMin -->
					<property name="zmin">-1.0</property>
					<!-- Type: double Units: angle Description: thetamax -->
					<property name="thetamax">6.2831853072</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="u_segments">4</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="v_segments">2</property>
				</properties>
			</node>
			<!-- Generates a NURBS torus -->
			<node name="NurbsTorus" id="128" class="c6cb880c 4e4d4028 8c77305f 4b8f05a2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: Major Radius -->
					<property name="majorradius">5.0</property>
					<!-- Type: double Units: distance Description: Minor Radius -->
					<property name="minorradius">2.0</property>
					<!-- Type: double Units: angle Description: Phi Minimum -->
					<property name="phimin">0.0</property>
					<!-- Type: double Units: angle Description: Phi Maximum -->
					<property name="phimax">6.2831853072</property>
					<!-- Type: double Units: angle Description: Theta Maximum -->
					<property name="thetamax">6.2831853072</property>
					<!-- Type: long Units: scalar Description: U Segments -->
					<property name="u_segments">4</property>
					<!-- Type: long Units: scalar Description: V Segments -->
					<property name="v_segments">4</property>
				</properties>
			</node>
			<!-- Mesh source that loads external Wavefront (.obj) files into the document by reference -->
			<node name="OBJMeshInput" id="129" class="650f96b9 e1c145d5 9eda410d 13f4e98f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: boost::filesystem::path Description: Input file -->
					<property name="file"></property>
					<!-- Type: std::string Description: Texture U -->
					<property name="texture_u">s</property>
					<!-- Type: std::string Description: Texture V -->
					<property name="texture_v">t</property>
					<!-- Type: std::string Description: Texture W -->
					<property name="texture_w">w</property>
				</properties>
			</node>
			<!-- Mesh sink that saves external Wavefront (.obj) files -->
			<node name="OBJMeshOutput" id="130" class="32120889 85964fd3 8dac7deb e3fc9676">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: boost::filesystem::path Description: Output file -->
					<property name="file"></property>
				</properties>
			</node>
			<!-- OpenGL Render Engine -->
			<node name="OpenGLEngine" id="131" class="0059ba47 7bf740f3 93fb523d 5899f22c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Units: scalar Description: OpengGL point size -->
					<property name="point_size">4.0</property>
					<!-- Type: k3d::color Description: Background color -->
					<property name="background_color">0.8 0.8 0.8</property>
					<!-- Type: bool Description: Fog -->
					<property name="fog">0</property>
					<!-- Type: double Units: distance Description: Fog near distance -->
					<property name="fog_near">0.0</property>
					<!-- Type: double Units: distance Description: Fog far distance -->
					<property name="fog_far">100.0</property>
					<!-- Type: bool Description: Headlight -->
					<property name="headlight">1</property>
					<!-- Type: bool Description: Show lights (on/off) -->
					<property name="show_lights">0</property>
					<!-- Type: bool Description: Draw points -->
					<property name="draw_points">1</property>
					<!-- Type: bool Description: Draw edges -->
					<property name="draw_edges">1</property>
					<!-- Type: bool Description: Draw faces -->
					<property name="draw_faces">1</property>
					<!-- Type: bool Description: Draw Linear Curves -->
					<property name="draw_linear_curves">1</property>
					<!-- Type: bool Description: Draw Cubic Curves -->
					<property name="draw_cubic_curves">1</property>
					<!-- Type: bool Description: Draw NURBS Curves -->
					<property name="draw_nucurves">1</property>
					<!-- Type: bool Description: Draw bilinear patches -->
					<property name="draw_bilinear_patches">1</property>
					<!-- Type: bool Description: Draw bicubic patches -->
					<property name="draw_bicubic_patches">1</property>
					<!-- Type: bool Description: Draw NURBS patches -->
					<property name="draw_nupatches">1</property>
					<!-- Type: bool Description: Draw RenderMan blobbies -->
					<property name="draw_blobbies">1</property>
					<!-- Type: bool Description: Draw two sided -->
					<property name="draw_two_sided">1</property>
					<!-- Type: bool Description: Draw Safe Zone -->
					<property name="draw_safe_zone">0</property>
					<!-- Type: bool Description: Draw center screen cross -->
					<property name="draw_aimpoint">1</property>
					<!-- Type: bool Description: Draw bounding rectangle for output rendering -->
					<property name="draw_crop_window">1</property>
					<!-- Type: bool Description: Draw Camera Frustum -->
					<property name="draw_frustum">1</property>
				</properties>
			</node>
			<!-- OpenGL Material -->
			<node name="OpenGLMaterial" id="132" class="00000001 00000002 00000003 00000005">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::color Description: Ambient Color -->
					<property name="ambient_color">0.0 0.0 0.0</property>
					<!-- Type: k3d::color Description: Diffuse Color -->
					<property name="diffuse_color">1.0 1.0 1.0</property>
					<!-- Type: k3d::color Description: Specular Color -->
					<property name="specular_color">0.0 0.0 0.0</property>
					<!-- Type: k3d::color Description: Emission Color -->
					<property name="emission_color">0.0 0.0 0.0</property>
					<!-- Type: double Description: Shininess -->
					<property name="shininess">64.0</property>
				</properties>
			</node>
			<!-- Creates an orientation transform matrix -->
			<node name="Orientation" id="133" class="cf562348 02624035 ae649a84 f42e0b69">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Coordinate space -->
					<property name="space">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: double Units: angle Description: X rotation angle -->
					<property name="x">0.0</property>
					<!-- Type: double Units: angle Description: Y rotation angle -->
					<property name="y">0.0</property>
					<!-- Type: double Units: angle Description: Z rotation angle -->
					<property name="z">0.0</property>
					<!-- Type: k3d::matrix4 Description: Read only -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- POV Render Engine -->
			<node name="POVEngine" id="134" class="7982ee23 854a43e7 874c8ad7 5d0b95d2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: enumeration Values: ['', '320x240', '480x360', '640x480', '800x600', '1024x768', '1280x960', '1600x1200', '32x32', '64x64', '128x128', '256x256', '512x512', '1024x1024', 'Full Camera Aperture (1K)', 'Full Camera Aperture (2K)', 'Full Camera Aperture (4K)', 'Academy Full Frame (1K)', 'Academy Full Frame (2K)', 'Academy Full Frame (4K)', 'Academy Projection 1.66 (1K)', 'Academy Projection 1.66 (2K)', 'Academy Projection 1.66 (4K)', 'Academy Projection 1.85 (1K)', 'Academy Projection 1.85 (2K)', 'Academy Projection 1.85 (4K)', 'Anamorphic Squeezed (1K)', 'Anamorphic Squeezed (2K)', 'Anamorphic Squeezed (4K)', 'Anamorphic Unsqueezed (1K)', 'Anamorphic Unsqueezed (2K)', 'Anamorphic Unsqueezed (4K)'] Description: Choose a predefined image resolution -->
					<property name="resolution"></property>
					<!-- Type: long Units: scalar Description: Output pixel width -->
					<property name="pixel_width">320</property>
					<!-- Type: long Units: scalar Description: Output pixel height -->
					<property name="pixel_height">240</property>
				</properties>
			</node>
			<!-- Paraboloid primitive -->
			<node name="Paraboloid" id="135" class="00000001 00000000 00000000 00000068">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Maximum point position -->
					<property name="zmax">10.0</property>
					<!-- Type: double Units: distance Description: Origin position -->
					<property name="zmin">0.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Dummy shadow map source for raytracing with Pixie -->
			<node name="PixieRaytraceMap" id="136" class="896ac401 5fae47ce 92836627 934dacdc">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
				</properties>
			</node>
			<!-- Planar projection map -->
			<node name="PlanarMap" id="137" class="d9148b60 7f2a49f0 a28e505a a3f4d4df">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
				</properties>
			</node>
			<!-- Maps values to geometry using a planar projection map -->
			<node name="PlanarMap2" id="138" class="9e25bcdd 621d4536 a622a63f a59e874b">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: enumeration Values: ['-x', '+x', '-y', '+y', '-z', '+z'] Description: Projection Axis -->
					<property name="axis">+z</property>
					<!-- Type: double Description: S0 -->
					<property name="s0">0.0</property>
					<!-- Type: double Description: S1 -->
					<property name="s1">1.0</property>
					<!-- Type: double Description: T0 -->
					<property name="t0">0.0</property>
					<!-- Type: double Description: T1 -->
					<property name="t1">1.0</property>
					<!-- Type: double Description: Default S -->
					<property name="default_s">0.0</property>
					<!-- Type: double Description: Default T -->
					<property name="default_t">0.0</property>
					<!-- Type: bool Description: Tag Points -->
					<property name="tag_points">0</property>
					<!-- Type: bool Description: Tag Edges -->
					<property name="tag_edges">0</property>
				</properties>
			</node>
			<!-- Converts input points to a parametric surface -->
			<node name="PointsToBlobby" id="139" class="9d5d69d9 fe994aa0 9b7dee22 1823bd2c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: double Units: distance Description: Points radius -->
					<property name="radius">1.0</property>
				</properties>
			</node>
			<!-- Generates a polygonal cone with optional endcap -->
			<node name="PolyCone" id="140" class="7c41b43f 385143ab 86969795 368d6199">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Columns -->
					<property name="u_segments">32</property>
					<!-- Type: long Units: scalar Description: Rows -->
					<property name="v_segments">5</property>
					<!-- Type: bool Description: Cap cone bottom -->
					<property name="bottom">1</property>
					<!-- Type: double Units: distance Description: Bottom radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Z Max (RenderMan convention) -->
					<property name="height">10.0</property>
					<!-- Type: double Description: Radial power -->
					<property name="u_power">1.0</property>
					<!-- Type: double Description: Length power -->
					<property name="v_power">1.0</property>
				</properties>
			</node>
			<!-- Generates a polygonal cube -->
			<node name="PolyCube" id="141" class="7ec966d1 d78a445c 8806b8a3 5593f241">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Column number (X axis) -->
					<property name="columns">1</property>
					<!-- Type: long Units: scalar Description: Row number (Y axis) -->
					<property name="rows">1</property>
					<!-- Type: long Units: scalar Description: Slice number (Z axis) -->
					<property name="slices">1</property>
					<!-- Type: double Units: distance Description: Cube width -->
					<property name="width">5.0</property>
					<!-- Type: double Units: distance Description: Cube height -->
					<property name="height">5.0</property>
					<!-- Type: double Units: distance Description: Cube depth -->
					<property name="depth">5.0</property>
				</properties>
			</node>
			<!-- Generates a polygonal cushion (a cube with rounded edges) -->
			<node name="PolyCushion" id="142" class="c11b963d 108d471c a3826195 821116b0">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Length segments -->
					<property name="length_segments">5</property>
					<!-- Type: long Units: scalar Description: Radial segments -->
					<property name="radial_segments">5</property>
					<!-- Type: double Units: distance Description: Rounded parts diameter -->
					<property name="diameter">4.0</property>
					<!-- Type: double Units: distance Description: Original cube width -->
					<property name="width">8.0</property>
					<!-- Type: double Units: distance Description: Original cube height -->
					<property name="height">8.0</property>
					<!-- Type: double Units: distance Description: Original cube depth -->
					<property name="depth">8.0</property>
				</properties>
			</node>
			<!-- Generates a polygonal cylinder with optional endcaps -->
			<node name="PolyCylinder" id="143" class="d8c4d9fd 42334a54 a4b48185 d8506489">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Columns -->
					<property name="u_segments">32</property>
					<!-- Type: long Units: scalar Description: Rows -->
					<property name="v_segments">5</property>
					<!-- Type: bool Description: Cap cylinder top -->
					<property name="top">1</property>
					<!-- Type: bool Description: Cap cylinder bottom -->
					<property name="bottom">1</property>
					<!-- Type: double Units: distance Description: Cylinder radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Z max (RenderMan convention) -->
					<property name="zmax">5.0</property>
					<!-- Type: double Units: distance Description: Z min (RenderMan convention) -->
					<property name="zmin">-5.0</property>
					<!-- Type: double Units: scalar Description: Radial power -->
					<property name="u_power">1.0</property>
					<!-- Type: long Units: scalar Description: 0 : single face, >= 1 : segments -->
					<property name="top_segments">0</property>
					<!-- Type: long Units: scalar Description: 0 : single face, >= 1 : segments -->
					<property name="bottom_segments">0</property>
				</properties>
			</node>
			<!-- Generates a polygonal disk -->
			<node name="PolyDisk" id="144" class="bfe3e783 2a7a4f51 b696858a b41d794f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: distance Description: Radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: distance Description: Height -->
					<property name="height">0.0</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="u_segments">16</property>
					<!-- Type: long Units: scalar Description: Radial Segments -->
					<property name="v_segments">2</property>
				</properties>
			</node>
			<!-- Generates a polygonal grid -->
			<node name="PolyGrid" id="145" class="acb3b4f8 5cd6471c aed72686 c576987c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Column number -->
					<property name="columns">5</property>
					<!-- Type: long Units: scalar Description: Row number -->
					<property name="rows">5</property>
					<!-- Type: double Units: distance Description: Grid width -->
					<property name="width">10.0</property>
					<!-- Type: double Units: distance Description: Grid height -->
					<property name="height">10.0</property>
					<!-- Type: enumeration Values: ['-x', '+x', '-y', '+y', '-z', '+z'] Description: Orientation type (forward or backward along X, Y or Z axis) -->
					<property name="orientation">+z</property>
				</properties>
			</node>
			<!-- Generates a polygonal sphere -->
			<node name="PolySphere" id="146" class="919c3786 619e4e84 b4ad868f 1e77e67c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Columns -->
					<property name="u_segments">32</property>
					<!-- Type: long Units: scalar Description: Rows -->
					<property name="v_segments">16</property>
					<!-- Type: double Units: distance Description: Sphere radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Units: scalar Description: Radial Power -->
					<property name="u_power">1.0</property>
					<!-- Type: double Units: scalar Description: Length Power -->
					<property name="v_power">1.0</property>
					<!-- Type: enumeration Values: ['sphere', 'quad_only_sphere', 'sphereized_cylinder'] Description: Primitive type (sphere, quad only sphere or sphereized cylinder -->
					<property name="type">sphere</property>
				</properties>
			</node>
			<!-- Generates a polygonal sphere by recursive subdivision of an isocahedron -->
			<node name="PolySphereTessellation" id="147" class="5d228c83 ff624faa a95cb0ee c2b1613b">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Tessellation Level -->
					<property name="tessellation_level">3</property>
					<!-- Type: double Units: distance Description: Sphere radius -->
					<property name="radius">5.0</property>
				</properties>
			</node>
			<!-- Generates an FFT-based fractal terrain -->
			<node name="PolyTerrainFFT" id="148" class="7646f5a1 3f3640d6 8d4c70af 91bcb418">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Subdivision iterations -->
					<property name="iterations">4</property>
					<!-- Type: double Units: distance Description: Fractal dimension -->
					<property name="dimension">0.5</property>
					<!-- Type: long Units: scalar Description: Random seed -->
					<property name="randomseed">123</property>
					<!-- Type: enumeration Values: ['-x', '+x', '-y', '+y', '-z', '+z'] Description: Orientation type (forward or backward along X, Y or Z axis) -->
					<property name="orientation">+z</property>
				</properties>
			</node>
			<!-- Generates an HfBM-based fractal terrain -->
			<node name="PolyTerrainHfBM" id="149" class="ff22f8f8 a8b540f6 b612a012 8d4e9adb">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Iterations -->
					<property name="iterations">4</property>
					<!-- Type: double Units: distance Description: Fractal dimension -->
					<property name="dimension">0.5</property>
					<!-- Type: double Units: distance Description: Lacunarity -->
					<property name="lacunarity">0.6</property>
					<!-- Type: double Units: distance Description: Octaves -->
					<property name="octaves">4.0</property>
					<!-- Type: double Units: distance Description: Offset -->
					<property name="offset">0.0</property>
					<!-- Type: double Units: distance Description: Frequency -->
					<property name="frequency">6.0</property>
					<!-- Type: double Units: distance Description: Noise offset -->
					<property name="noiseoffset">0.5</property>
					<!-- Type: enumeration Values: ['-x', '+x', '-y', '+y', '-z', '+z'] Description: Orientation type (forward or backward along X, Y or Z axis) -->
					<property name="orientation">+z</property>
				</properties>
			</node>
			<!-- Generates polygonal text using Freetype 2 -->
			<node name="PolyText" id="150" class="9acaeaf1 1fe74387 ae71cbb3 9b5e33fd">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: boost::filesystem::path Description: Font path -->
					<property name="font">/home/tshead/k3d/share/fonts/VeraBd.ttf</property>
					<!-- Type: std::string Description: Text -->
					<property name="text">Text!</property>
					<!-- Type: long Units: scalar Description: Bezier curves subdivision number -->
					<property name="curve_divisions">3</property>
					<!-- Type: double Units: distance Description: Font height -->
					<property name="height">10.0</property>
					<!-- Type: enumeration Values: ['-x', '+x', '-y', '+y', '-z', '+z'] Description: Orientation type (forward or backward along X, Y or Z axis) -->
					<property name="orientation">+y</property>
				</properties>
			</node>
			<!-- Generates a polygonal torus -->
			<node name="PolyTorus" id="151" class="9a5ea45b ebc64e37 a50b287a 89e18b71">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Columns -->
					<property name="u_segments">32</property>
					<!-- Type: long Units: scalar Description: Rows -->
					<property name="v_segments">16</property>
					<!-- Type: double Units: distance Description: Major Radius -->
					<property name="majorradius">5.0</property>
					<!-- Type: double Units: distance Description: Minor Radius -->
					<property name="minorradius">1.0</property>
					<!-- Type: double Units: scalar Description: Major Power -->
					<property name="u_power">1.0</property>
					<!-- Type: double Units: scalar Description: Minor Power -->
					<property name="v_power">1.0</property>
				</properties>
			</node>
			<!-- Polygonizes bicubic patches -->
			<node name="PolygonizeBicubicPatches" id="152" class="bd6bdff8 b4374eb1 ad39f4ad 87209e59">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: long Units: scalar Description: Patch subdivision number -->
					<property name="subdivisions">3</property>
				</properties>
			</node>
			<!-- Polygonizes blobby implicit surfaces -->
			<node name="PolygonizeBlobbies" id="153" class="446d652b 938042d6 9f006d66 3cbff023">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Voxel subdivisions along blobby's bounding-box width, height and depth  -->
					<property name="voxels">30</property>
				</properties>
			</node>
			<!-- Generates a uniform polyhedron -->
			<node name="Polyhedron" id="154" class="916c98dd 74f24362 98364c94 2a9f9ae7">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: long Units: scalar Description: Polyhedron Number -->
					<property name="number">1</property>
					<!-- Type: bool Description: Polyhedron's dual -->
					<property name="dual">0</property>
					<!-- Type: double Units: scalar Description: Polyhedron size (scale) -->
					<property name="size">5.0</property>
				</properties>
			</node>
			<!-- Creates a position transform matrix -->
			<node name="Position" id="155" class="e2edd795 08f9416a 84139876 9c25a60a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Coordinate space -->
					<property name="space">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: double Units: distance Description: X offset -->
					<property name="x">0.0</property>
					<!-- Type: double Units: distance Description: Y offset -->
					<property name="y">0.0</property>
					<!-- Type: double Units: distance Description: Z offset -->
					<property name="z">0.0</property>
					<!-- Type: k3d::matrix4 Description: Read only -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Prints an input string value to stdout -->
			<node name="PrintStdout" id="156" class="9fdbe940 7f394ad7 8654d53c e33b7a9a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: std::string Description: Prints input string to console's stdout -->
					<property name="input"></property>
				</properties>
			</node>
			<!-- Surface simplification using quadric error metrics -->
			<node name="QuadricDecimation" id="157" class="9bfe8fce 3c7c4b00 9e050d1e 062059fa">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: long Units: scalar Description: Target face number -->
					<property name="face_number">100</property>
					<!-- Type: enumeration Values: ['edge', 'face'] Description: Stop function -->
					<property name="contraction_type">edge</property>
					<!-- Type: enumeration Values: ['optimal', 'line', 'endormid', 'endpoints'] Description: Placement policy (optimal, line, endpoint or midpoint, endpoints) -->
					<property name="placement_policy">optimal</property>
					<!-- Type: enumeration Values: ['uniform', 'area', 'angle'] Description: Quadric weighting policy (uniform, area, angle) -->
					<property name="quadric_weighting">area</property>
					<!-- Type: double Units: scalar Description: Use boundary preservation planes with given weight -->
					<property name="boundary_weight">1000.0</property>
					<!-- Type: double Units: angle Description: Compactness ratio -->
					<property name="compactness_ratio">0.0</property>
					<!-- Type: double Units: scalar Description: Penalty for bad meshes -->
					<property name="meshing_penalty">1.0</property>
				</properties>
			</node>
			<!-- Provides a realtime time source for a K-3D document -->
			<node name="RealtimeSource" id="158" class="f7c119e7 d87b465a 9b7e0289 82d91702">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Units: scalar Description: Frame rate -->
					<property name="frame_rate">1.0</property>
					<!-- Type: double Description: Time -->
					<property name="time">1145817906.72</property>
				</properties>
			</node>
			<!-- RenderMan area light source -->
			<node name="RenderManAreaLight" id="159" class="d7cab1c3 60214984 995601b5 4dc8d62e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Light shader -->
					<property name="shader">0</property>
					<!-- Type: k3d::inode* Description: Geometry -->
					<property name="geometry">0</property>
				</properties>
			</node>
			<!-- Renders a one-dimensional array of geometric object instances -->
			<node name="RenderManArray1D" id="160" class="714f0863 6af8447f 9d5a556c 5e2f6940">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: k3d::inode* Description: Source -->
					<property name="source">0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: long Units: scalar Description: Count -->
					<property name="count">5</property>
				</properties>
			</node>
			<!-- Renders a two-dimensional array of geometric object instances -->
			<node name="RenderManArray2D" id="161" class="5a7881eb f8e14075 977fe1fb 2036f517">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: k3d::inode* Description: Source -->
					<property name="source">0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: long Units: scalar Description: Dimension 1 Count -->
					<property name="count1">5</property>
					<!-- Type: long Units: scalar Description: Dimension 2 Count -->
					<property name="count2">5</property>
				</properties>
			</node>
			<!-- Renders a three-dimensional array of geometric object instances -->
			<node name="RenderManArray3D" id="162" class="ea6c1213 033d42f5 9146951e 3aee7e95">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: k3d::inode* Description: Source -->
					<property name="source">0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: long Units: scalar Description: Dimension 1 Count -->
					<property name="count1">5</property>
					<!-- Type: long Units: scalar Description: Dimension 2 Count -->
					<property name="count2">5</property>
					<!-- Type: long Units: scalar Description: Dimension 3 Count -->
					<property name="count3">5</property>
				</properties>
			</node>
			<!-- Places a shader on a bilinear patch, aligned with the farplane -->
			<node name="RenderManBackgroundPlane" id="163" class="80e1c8eb 001d4342 b401551d d5c45a3d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Description: Distance -->
					<property name="distance">1.0</property>
				</properties>
			</node>
			<!-- Places a shader on a sphere, centered on the camera and aligned with world coordinates -->
			<node name="RenderManBackgroundSphere" id="164" class="00000001 00000000 00000000 00000019">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Description: Distance -->
					<property name="distance">0.99</property>
					<!-- Type: bool Description: Visible in the final rendered image -->
					<property name="render_final">1</property>
				</properties>
			</node>
			<!-- Combines solids using boolean operators at render-time -->
			<node name="RenderManCSGOperator" id="165" class="00000001 00000000 00000000 0000000a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: enumeration Values: ['intersection', 'union', 'difference', 'reverse_difference'] Description: Operation -->
					<property name="type">intersection</property>
					<!-- Type: k3d::inode* Description: Instance1 -->
					<property name="instance1">0</property>
					<!-- Type: k3d::inode* Description: Instance2 -->
					<property name="instance2">0</property>
				</properties>
			</node>
			<!-- Designates a solid volume at render-time -->
			<node name="RenderManCSGSolid" id="166" class="00000001 00000000 00000000 0000007b">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Instance -->
					<property name="instance">0</property>
				</properties>
			</node>
			<!-- Inserts a RenderMan DelayedReadArchive call into rendered output -->
			<node name="RenderManDelayedReadArchive" id="167" class="65fd1c9e a18b403a bccafc19 df504c75">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: boost::filesystem::path Description: RIB archive to be inserted in output -->
					<property name="file"></property>
					<!-- Type: k3d::bounding_box3 Description: Visibility bounding box -->
					<property name="bounding_box">0 1 2 3 4 5</property>
				</properties>
			</node>
			<!-- Encapsulates a RenderMan displacement shader instance -->
			<node name="RenderManDisplacementShader" id="168" class="62827bb7 4cb64427 a9eadbc8 62e1a3f2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: boost::filesystem::path Description: Shader Path -->
					<property name="shader_path"></property>
				</properties>
			</node>
			<!-- RenderMan Render Engine -->
			<node name="RenderManEngine" id="169" class="0dc5e733 fa684e05 86a3865f 42f7a99d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: enumeration Values: ['', '320x240', '480x360', '640x480', '800x600', '1024x768', '1280x960', '1600x1200', '32x32', '64x64', '128x128', '256x256', '512x512', '1024x1024', 'Full Camera Aperture (1K)', 'Full Camera Aperture (2K)', 'Full Camera Aperture (4K)', 'Academy Full Frame (1K)', 'Academy Full Frame (2K)', 'Academy Full Frame (4K)', 'Academy Projection 1.66 (1K)', 'Academy Projection 1.66 (2K)', 'Academy Projection 1.66 (4K)', 'Academy Projection 1.85 (1K)', 'Academy Projection 1.85 (2K)', 'Academy Projection 1.85 (4K)', 'Anamorphic Squeezed (1K)', 'Anamorphic Squeezed (2K)', 'Anamorphic Squeezed (4K)', 'Anamorphic Unsqueezed (1K)', 'Anamorphic Unsqueezed (2K)', 'Anamorphic Unsqueezed (4K)'] Description: Choose a predefined image resolution -->
					<property name="resolution"></property>
					<!-- Type: std::string Description: Render Engine -->
					<property name="render_engine">aqsis</property>
					<!-- Type: long Units: scalar Description: Output pixel width -->
					<property name="pixel_width">320</property>
					<!-- Type: long Units: scalar Description: Output pixel height -->
					<property name="pixel_height">240</property>
					<!-- Type: double Units: scalar Description: Output pixel aspect ratio -->
					<property name="pixel_aspect_ratio">1.0</property>
					<!-- Type: k3d::inode* Description: Default atmosphere shader -->
					<property name="default_atmosphere_shader">0</property>
					<!-- Type: k3d::inode* Description: Default interior shader -->
					<property name="default_interior_shader">0</property>
					<!-- Type: k3d::inode* Description: Default exterior shader -->
					<property name="default_exterior_shader">0</property>
					<!-- Type: k3d::inode* Description: Imager shader -->
					<property name="imager_shader">0</property>
					<!-- Type: long Units: scalar Description: Bucket Width -->
					<property name="bucket_width">16</property>
					<!-- Type: long Units: scalar Description: Bucket Height -->
					<property name="bucket_height">16</property>
					<!-- Type: long Units: scalar Description: Grid Size -->
					<property name="grid_size">256</property>
					<!-- Type: long Units: scalar Description: Eye Splits -->
					<property name="eye_splits">10</property>
					<!-- Type: long Units: scalar Description: Texture Memory -->
					<property name="texture_memory">1024</property>
					<!-- Type: bool Description: Render Alpha -->
					<property name="render_alpha">1</property>
					<!-- Type: double Units: scalar Description: The smaller the faster, the higher the better (anti-aliasing) -->
					<property name="pixel_xsamples">3.0</property>
					<!-- Type: double Units: scalar Description: The smaller the faster, the higher the better (anti-aliasing) -->
					<property name="pixel_ysamples">3.0</property>
					<!-- Type: std::string Description: Anti-aliasing type -->
					<property name="pixel_filter">gaussian</property>
					<!-- Type: double Units: scalar Description: Filter width in X -->
					<property name="pixel_filter_width">2.0</property>
					<!-- Type: double Units: scalar Description: Filter width in Y -->
					<property name="pixel_filter_height">2.0</property>
					<!-- Type: double Units: scalar Description: Exposure -->
					<property name="exposure">1.0</property>
					<!-- Type: double Units: scalar Description: Gamma -->
					<property name="gamma">1.0</property>
					<!-- Type: bool Description: Depth of Field -->
					<property name="dof">0</property>
					<!-- Type: double Units: scalar Description: f-Stop -->
					<property name="fstop">0.3</property>
					<!-- Type: double Units: distance Description: Focal Length -->
					<property name="focal_length">1.6</property>
					<!-- Type: double Units: distance Description: Focus Plane -->
					<property name="focus_plane">30.0</property>
					<!-- Type: double Units: scalar Description: Shading Rate -->
					<property name="shading_rate">1.0</property>
					<!-- Type: std::string Description: Shading Interpolation -->
					<property name="shading_interpolation">constant</property>
					<!-- Type: bool Description: Two Sided -->
					<property name="two_sided">1</property>
					<!-- Type: bool Description: Motion Blur -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Render Motion Blur -->
					<property name="render_motion_blur">0</property>
				</properties>
			</node>
			<!-- Encapsulates a RenderMan imager shader instance -->
			<node name="RenderManImagerShader" id="170" class="91659033 bd124ba0 81eabb0a c5ecd094">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: boost::filesystem::path Description: Shader Path -->
					<property name="shader_path"></property>
				</properties>
			</node>
			<!-- Converts a bitmap into a RenderMan LatLong Environment Map -->
			<node name="RenderManLatLongEnvironmentMap" id="171" class="04354dba 91a7411c 88b73725 5808a415">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: std::string Description: Filter -->
					<property name="filter">gaussian</property>
					<!-- Type: double Units: scalar Description: Filter S Width -->
					<property name="swidth">2.0</property>
					<!-- Type: double Units: scalar Description: Filter T Width -->
					<property name="twidth">2.0</property>
				</properties>
			</node>
			<!-- RenderMan light source -->
			<node name="RenderManLight" id="172" class="00000001 00000000 00000000 0000001d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::inode* Description: Light shader -->
					<property name="shader">0</property>
				</properties>
			</node>
			<!-- Encapsulates a RenderMan light shader instance -->
			<node name="RenderManLightShader" id="173" class="830e867b 7bc94c6c 8d5087ee 8aa35db2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: boost::filesystem::path Description: Shader Path -->
					<property name="shader_path"></property>
				</properties>
			</node>
			<!-- A RenderMan surface / displacement material -->
			<node name="RenderManMaterial" id="174" class="00000001 00000000 00000000 00000024">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Surface shader -->
					<property name="surface_shader">0</property>
					<!-- Type: k3d::inode* Description: Displacement shader -->
					<property name="displacement_shader">0</property>
					<!-- Type: k3d::inode* Description: Atmosphere shader -->
					<property name="atmosphere_shader">0</property>
					<!-- Type: k3d::inode* Description: Interior shader -->
					<property name="interior_shader">0</property>
					<!-- Type: k3d::inode* Description: Exterior shader -->
					<property name="exterior_shader">0</property>
					<!-- Type: bool Description: Render geometry as a matte -->
					<property name="matte">0</property>
					<!-- Type: double Units: distance Description: Displacement bounds -->
					<property name="displacement_bounds">1.0</property>
					<!-- Type: k3d::color Description: Color -->
					<property name="color">1.0 1.0 1.0</property>
					<!-- Type: k3d::color Description: Opacity -->
					<property name="opacity">1.0 1.0 1.0</property>
				</properties>
			</node>
			<!-- Inserts a RenderMan ReadArchive call into rendered output -->
			<node name="RenderManReadArchive" id="175" class="5dc6fac5 d9a54c79 929f1612 6f83a8b8">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: boost::filesystem::path Description: RIB archive to be inserted in output -->
					<property name="file"></property>
				</properties>
			</node>
			<!-- Creates RenderMan output under script control -->
			<node name="RenderManScript" id="176" class="ded017f6 a08849fd a9d8dd63 e3cd6f1d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: std::string Description: Script source code -->
					<property name="script">#python

import k3d
import math
import sys
import ri
from ri import *

# Redirect output to our RIB archive
ri._ribout = open(Archive, "w")

RiSphere(5, -5, 5, 360)

ri._ribout.flush()
</property>
				</properties>
			</node>
			<!-- A shadow_map source within the 3D workspace -->
			<node name="RenderManShadowMap" id="177" class="9bce6e2b 083c4353 829052e9 f98c7023">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Shadow Map Camera -->
					<property name="camera">0</property>
					<!-- Type: bool Description: Create shadow map during rendering -->
					<property name="create">1</property>
					<!-- Type: bool Description: View shadow map creation during rendering -->
					<property name="view">1</property>
					<!-- Type: enumeration Values: ['', '320x240', '480x360', '640x480', '800x600', '1024x768', '1280x960', '1600x1200', '32x32', '64x64', '128x128', '256x256', '512x512', '1024x1024', 'Full Camera Aperture (1K)', 'Full Camera Aperture (2K)', 'Full Camera Aperture (4K)', 'Academy Full Frame (1K)', 'Academy Full Frame (2K)', 'Academy Full Frame (4K)', 'Academy Projection 1.66 (1K)', 'Academy Projection 1.66 (2K)', 'Academy Projection 1.66 (4K)', 'Academy Projection 1.85 (1K)', 'Academy Projection 1.85 (2K)', 'Academy Projection 1.85 (4K)', 'Anamorphic Squeezed (1K)', 'Anamorphic Squeezed (2K)', 'Anamorphic Squeezed (4K)', 'Anamorphic Unsqueezed (1K)', 'Anamorphic Unsqueezed (2K)', 'Anamorphic Unsqueezed (4K)'] Description: Choose a predefined image resolution -->
					<property name="resolution"></property>
					<!-- Type: long Units: scalar Description: Output pixel width -->
					<property name="pixel_width">256</property>
					<!-- Type: long Units: scalar Description: Output pixel height -->
					<property name="pixel_height">256</property>
					<!-- Type: double Units: scalar Description: Output pixel aspect ratio -->
					<property name="pixel_aspect_ratio">1.0</property>
				</properties>
			</node>
			<!-- Encapsulates a RenderMan surface shader instance -->
			<node name="RenderManSurfaceShader" id="178" class="b553a3bd d1044c6e b3f21e07 87132c31">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: boost::filesystem::path Description: Shader Path -->
					<property name="shader_path"></property>
					<!-- Type: double Units: scalar Description: Left -->
					<property name="left">-0.666666666667</property>
					<!-- Type: double Units: scalar Description: Right -->
					<property name="right">0.666666666667</property>
					<!-- Type: double Units: scalar Description: Top -->
					<property name="top">0.5</property>
					<!-- Type: double Units: scalar Description: Bottom -->
					<property name="bottom">-0.5</property>
					<!-- Type: double Units: distance Description: Near Plane Distance -->
					<property name="near">1.0</property>
					<!-- Type: double Units: distance Description: Far Plane Distance -->
					<property name="far">1000.0</property>
				</properties>
			</node>
			<!-- Converts a bitmap into a RenderMan Texture Map -->
			<node name="RenderManTextureMap" id="179" class="956071b5 b1d0418b 89c5037d f7618d54">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::bitmap* Description: Input bitmap -->
					<property name="input_bitmap"></property>
					<!-- Type: k3d::bitmap* Description: Output output -->
					<property name="output_bitmap"></property>
					<!-- Type: std::string Description: S Wrap -->
					<property name="swrap">clamp</property>
					<!-- Type: std::string Description: T Wrap -->
					<property name="twrap">clamp</property>
					<!-- Type: std::string Description: Filter -->
					<property name="filter">gaussian</property>
					<!-- Type: double Units: scalar Description: Filter S Width -->
					<property name="swidth">2.0</property>
					<!-- Type: double Units: scalar Description: Filter T Width -->
					<property name="twidth">2.0</property>
				</properties>
			</node>
			<!-- Encapsulates a RenderMan volume shader instance -->
			<node name="RenderManVolumeShader" id="180" class="fd07a255 9bb84841 87632abe 3ceb9fc7">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: boost::filesystem::path Description: Shader Path -->
					<property name="shader_path"></property>
				</properties>
			</node>
			<!-- RotateArray1D -->
			<node name="RotateArray1D" id="181" class="321d43cf 45da4300 87fa6c4c ec37e850">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: k3d::angle_axis Description: Angle -->
					<property name="angle">60.0000000002 0.0 0.0 1.0</property>
				</properties>
			</node>
			<!-- RotateArray2D -->
			<node name="RotateArray2D" id="182" class="19870cd0 37724e7f b01505a4 e773d2ed">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: k3d::angle_axis Description: Angle 1 -->
					<property name="angle1">10.0 0.0 1.0 0.0</property>
					<!-- Type: k3d::angle_axis Description: Angle 2 -->
					<property name="angle2">10.0 0.0 0.0 1.0</property>
				</properties>
			</node>
			<!-- RotateArray3D -->
			<node name="RotateArray3D" id="183" class="c103b1c3 909b45fa b59de8c4 0dadfd51">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: k3d::angle_axis Description: Angle 1 -->
					<property name="angle1">10.0 0.0 1.0 0.0</property>
					<!-- Type: k3d::angle_axis Description: Angle 2 -->
					<property name="angle2">10.0 0.0 0.0 1.0</property>
					<!-- Type: k3d::angle_axis Description: Angle 3 -->
					<property name="angle3">10.0 1.0 0.0 0.0</property>
				</properties>
			</node>
			<!-- Rotates mesh points -->
			<node name="RotatePoints" id="184" class="89a6a016 3db04f26 b626bb37 6c812533">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: angle Description: X rotation angle -->
					<property name="x">0.0</property>
					<!-- Type: double Units: angle Description: Y rotation angle -->
					<property name="y">0.0</property>
					<!-- Type: double Units: angle Description: Z rotation angle -->
					<property name="z">0.0</property>
				</properties>
			</node>
			<!-- Adds variable-sharpness corners to SDS surfaces -->
			<node name="SDSCorner" id="185" class="ded03869 283e4531 9de22a9c e763d7c6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Description: Controls the sharpness of subdivision surface corners -->
					<property name="sharpness">0.0</property>
				</properties>
			</node>
			<!-- Adds variable-sharpness creases to SDS surfaces -->
			<node name="SDSCrease" id="186" class="78b79c12 4c174732 a67d6317 6dbec1fb">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Description: Controls the sharpness of subdivision surface creases -->
					<property name="sharpness">0.0</property>
				</properties>
			</node>
			<!-- Inserts holes into a subdivision mesh -->
			<node name="SDSHole" id="187" class="e2e8a116 38d44227 90ae28bf 271ab0be">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Add two scalar inputs and produce their sum as output -->
			<node name="ScalarAdd" id="188" class="e2d5e227 98a6424f ae607c8c c4e99bec">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: First input float -->
					<property name="input1">0.0</property>
					<!-- Type: double Description: Second input float -->
					<property name="input2">0.0</property>
					<!-- Type: double Description: Sum of inputs -->
					<property name="output">0.0</property>
				</properties>
			</node>
			<!-- Divide two scalar inputs and produce their quotient as output -->
			<node name="ScalarDivide" id="189" class="a797e7a9 237f45a8 a6ee43b3 fd58596f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: First input float -->
					<property name="input1">0.0</property>
					<!-- Type: double Description: Second input float -->
					<property name="input2">1.0</property>
					<!-- Type: double Description: Quotient of inputs -->
					<property name="output">0.0</property>
				</properties>
			</node>
			<!-- Modulo two scalar inputs and produce their remainder as output -->
			<node name="ScalarModulo" id="190" class="7c6cb94a e20d4fa2 b56f0f2a 50e822a0">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: First input float -->
					<property name="input1">0.0</property>
					<!-- Type: double Description: Second input float -->
					<property name="input2">1.0</property>
					<!-- Type: double Description: Remainder of inputs -->
					<property name="output">0.0</property>
				</properties>
			</node>
			<!-- Multiply two scalar inputs and produce their product as output -->
			<node name="ScalarMultiply" id="191" class="d5d068d2 b4f2470d b99280ae 1b092e59">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: First input float -->
					<property name="input1">0.0</property>
					<!-- Type: double Description: Second input float -->
					<property name="input2">1.0</property>
					<!-- Type: double Description: Product of inputs -->
					<property name="output">0.0</property>
				</properties>
			</node>
			<!-- Provides a source object to link scalar properties to -->
			<node name="ScalarProperty" id="192" class="35b28760 0547458f b4e3d324 84ae3545">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Units: scalar Description: Outputs the value exposed by this property -->
					<property name="value">1.0</property>
				</properties>
			</node>
			<!-- Applies a sine function to its input -->
			<node name="ScalarSine" id="193" class="b00248d6 9d6843d5 ab5a24bc 852519e5">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: Input value -->
					<property name="input">0.0</property>
					<!-- Type: double Description: Sine wave function applied on input -->
					<property name="output">0.0</property>
				</properties>
			</node>
			<!-- Scalar source that uses a script to create the output value -->
			<node name="ScalarSourceScript" id="194" class="ed110740 7c2e4215 bc8a4c1a 3c1736ba">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: Output scalar -->
					<property name="output_scalar">0.0</property>
					<!-- Type: std::string Description: Script that creates geometry -->
					<property name="script">#python

Output = 0.0

</property>
				</properties>
			</node>
			<!-- Subtract two scalar inputs and produce their difference as output -->
			<node name="ScalarSubtract" id="195" class="2b788bf5 09e44dd4 866a2d39 1b782873">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Description: First input float -->
					<property name="input1">0.0</property>
					<!-- Type: double Description: Second input float -->
					<property name="input2">0.0</property>
					<!-- Type: double Description: Difference of inputs -->
					<property name="output">0.0</property>
				</properties>
			</node>
			<!-- Creates a scale transform matrix -->
			<node name="Scale" id="196" class="542de0d6 e1e94e4a 883eb23c 3612fb8a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Coordinate space (matrix) -->
					<property name="space">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: double Units: scalar Description: X scaling -->
					<property name="x">1.0</property>
					<!-- Type: double Units: scalar Description: Y scaling -->
					<property name="y">1.0</property>
					<!-- Type: double Units: scalar Description: Z scaling -->
					<property name="z">1.0</property>
					<!-- Type: k3d::matrix4 Description: Output matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Scales mesh points -->
			<node name="ScalePoints" id="197" class="d3829136 1f934c4d 89151994 a49d9f65">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: scalar Description: X scale -->
					<property name="x">1.0</property>
					<!-- Type: double Units: scalar Description: Y scale -->
					<property name="y">1.0</property>
					<!-- Type: double Units: scalar Description: Z scale -->
					<property name="z">1.0</property>
				</properties>
			</node>
			<!-- Select the clockwise edge of an edge. If multiple edges are selected the first one in the list is selected and all others are deselected -->
			<node name="SelectClockwise" id="198" class="ea623f75 19264b07 bfa105a4 ba070bed">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: long Units: scalar Description: Edge number -->
					<property name="number">0</property>
				</properties>
			</node>
			<!-- Select the companion of an edge. If multiple edges are selected the first one in the list is selected and all others are deselected -->
			<node name="SelectCompanion" id="199" class="636a062d 80fc4b53 8f0149e8 4de9c520">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Selects portions of the input mesh that intersect a cube -->
			<node name="SelectCube" id="200" class="d4d45c53 7dd84306 909462d9 a45b7f4f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Units: distance Description: X coordinate of cube's min corner -->
					<property name="x1">-10.0</property>
					<!-- Type: double Units: distance Description: Y coordinate of cube's min corner -->
					<property name="y1">-10.0</property>
					<!-- Type: double Units: distance Description: Z coordinate of cube's min corner -->
					<property name="z1">-10.0</property>
					<!-- Type: double Units: distance Description: X coordinate of cube's max corner -->
					<property name="x2">10.0</property>
					<!-- Type: double Units: distance Description: Y coordinate of cube's max corner -->
					<property name="y2">10.0</property>
					<!-- Type: double Units: distance Description: Z coordinate of cube's max corner -->
					<property name="z2">10.0</property>
				</properties>
			</node>
			<!-- Selects edge loops containing selected egdes -->
			<node name="SelectEdgeLoops" id="201" class="6f42e16a 99804f99 a00528d3 702f015c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Selects edge rings containing selected egdes -->
			<node name="SelectEdgeRings" id="202" class="7e34dbd5 be9847b2 ac9f313e e1dcbb68">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: bool Description: Extended mode follows quads instead of edgeloops -->
					<property name="extended">1</property>
				</properties>
			</node>
			<!-- Selects a face from the input mesh by its index number -->
			<node name="SelectFaceByNumber" id="203" class="e6925525 e5aa4bb2 b6e0d3d0 b01d7e91">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: long Units: scalar Description: Face index -->
					<property name="index">0</property>
				</properties>
			</node>
			<!-- Selects points or faces that have numbers of sides within a specified range -->
			<node name="SelectNSided" id="204" class="129039f9 7a6d49fc 92c14587 764a8cc3">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: long Units: scalar Description: Gives chosen side number -->
					<property name="sides">5</property>
					<!-- Type: enumeration Values: ['less_or_equal', 'equal', 'greater_or_equal'] Description: Selection operator comparing with side number -->
					<property name="operator">equal</property>
					<!-- Type: enumeration Values: ['faces', 'points'] Description: Components to be selected (faces or edges) -->
					<property name="component">faces</property>
				</properties>
			</node>
			<!-- Selects a point from the input mesh by its index number -->
			<node name="SelectPointByNumber" id="205" class="ded6d3a7 65fc4d6d 8b7afff7 dd0785ad">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: long Units: scalar Description: Point index -->
					<property name="index">0</property>
				</properties>
			</node>
			<!-- Sets geometry materials -->
			<node name="SetMaterial" id="206" class="7743a7f2 995345b9 8d6dacc7 3fa37029">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
				</properties>
			</node>
			<!-- Shears mesh points along an axis -->
			<node name="ShearPoints" id="207" class="0def4291 51ce479b adf9aec8 ed522ccc">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Shear direction -->
					<property name="direction">z</property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Shear axis -->
					<property name="axis">x</property>
					<!-- Type: double Units: scalar Description: Shear factor -->
					<property name="shear_factor">0.0</property>
				</properties>
			</node>
			<!-- Shows internal structure numbering for points, edges and faces -->
			<node name="ShowComponentNumbering" id="208" class="9bed6d9a 790a4637 88de6e16 d04e1068">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::color Description: Numbering color for vertices -->
					<property name="vertex_color">0.0 0.0 1.0</property>
					<!-- Type: k3d::color Description: Numbering color for edges -->
					<property name="edge_color">0.0 1.0 0.0</property>
					<!-- Type: k3d::color Description: Numbering color for hole edges -->
					<property name="hole_edge_color">0.0 0.5 0.0</property>
					<!-- Type: k3d::color Description: Numbering color for faces -->
					<property name="face_color">1.0 0.0 0.0</property>
					<!-- Type: long Units: scalar Description: First vertex number shown -->
					<property name="first_vertex_number">0</property>
					<!-- Type: long Units: scalar Description: Last vertex number shown -->
					<property name="last_vertex_number">1000000</property>
					<!-- Type: long Units: scalar Description: First edge number shown -->
					<property name="first_edge_number">0</property>
					<!-- Type: long Units: scalar Description: Last edge number shown -->
					<property name="last_edge_number">1000000</property>
					<!-- Type: long Units: scalar Description: First face number shown -->
					<property name="first_face_number">0</property>
					<!-- Type: long Units: scalar Description: Last face number shown -->
					<property name="last_face_number">1000000</property>
				</properties>
			</node>
			<!-- Show face orientations (start from first edge) -->
			<node name="ShowFaceOrientations" id="209" class="f42986d3 275e421f 9378ab70 39c170e8">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::color Description: Orientation arrows color -->
					<property name="color">0.0 0.0 1.0</property>
				</properties>
			</node>
			<!-- Displays input matrix values -->
			<node name="ShowMatrix" id="210" class="488da0da bd1f4c37 9ee29974 7f6f99c3">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: std::string Description: First matrix line or row -->
					<property name="line1">0 0 0 0</property>
					<!-- Type: std::string Description: Second matrix line or row -->
					<property name="line2">0 0 0 0</property>
					<!-- Type: std::string Description: Third matrix line or row -->
					<property name="line3">0 0 0 0</property>
					<!-- Type: std::string Description: Fourth matrix line or row -->
					<property name="line4">0 0 0 0</property>
					<!-- Type: bool Description: Transpose shown matrix -->
					<property name="transpose">0</property>
					<!-- Type: k3d::matrix4 Description: Read only -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Smooths mesh points by averaging their positions with their neighbors' -->
			<node name="SmoothPoints" id="211" class="3d6d1c61 706f4968 93462489 9a3134a7">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: scalar Description: Smoothing factor -->
					<property name="smoothing">1.0</property>
				</properties>
			</node>
			<!-- Simulates smooth geometry by averaging polygon normals -->
			<node name="SmoothShade" id="212" class="7eed702d ba274e6b b8a5db73 ba9c2382">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Snaps one node to another -->
			<node name="Snap" id="213" class="176d4553 65fc48ca 845a8160 d31b41ae">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Read only -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Source Node -->
					<property name="source">0</property>
					<!-- Type: enumeration Values: [' None '] Description: Snap Source -->
					<property name="snap_source">-- None --</property>
					<!-- Type: k3d::inode* Description: Target Node -->
					<property name="target">0</property>
					<!-- Type: enumeration Values: [' None '] Description: Snap Target -->
					<property name="snap_target">-- None --</property>
					<!-- Type: bool Description: Snap Orientation -->
					<property name="snap_orientation">1</property>
				</properties>
			</node>
			<!-- Sphere primitive -->
			<node name="Sphere" id="214" class="00000001 00000000 00000000 00000069">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Units: distance Description: Sphere radius -->
					<property name="radius">5.0</property>
					<!-- Type: double Description: From RenderMan specification -->
					<property name="zmin">-1.0</property>
					<!-- Type: double Description: From RenderMan specification -->
					<property name="zmax">1.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Generates sphere eversion at any stage -->
			<node name="SphereEversion" id="215" class="2e885acd 9e914078 b4fcb4a7 415231c5">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: double Units: scalar Description: Eversion Time : between 0 and 1 -->
					<property name="time">0.0</property>
					<!-- Type: double Units: scalar Description: Sphere radius -->
					<property name="radius">5.0</property>
					<!-- Type: long Units: scalar Description: Latitudinal Patches Per Hemisphere -->
					<property name="latitudinal_patches">6</property>
					<!-- Type: long Units: scalar Description: Longitudinal Patches Per Strip -->
					<property name="longitudinal_patches">4</property>
					<!-- Type: long Units: scalar Description: Strip Number -->
					<property name="strips">8</property>
					<!-- Type: long Units: scalar Description: Display strip Number -->
					<property name="display_strips">8</property>
					<!-- Type: bool Description: Output half strips -->
					<property name="half_strips">0</property>
					<!-- Type: bool Description: Output lower hemisphere -->
					<property name="lower_hemisphere">1</property>
					<!-- Type: bool Description: Cylinder bending into sphere -->
					<property name="cylinder_test">0</property>
					<!-- Type: bool Description: Output polygons (true) or patches (false) -->
					<property name="polygonal">0</property>
				</properties>
			</node>
			<!-- Spherical projection map -->
			<node name="SphereMap" id="216" class="dd28dc8d 6a4b48f7 a8f6fa0c e15f43b6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
				</properties>
			</node>
			<!-- Constrains points to the surface of a sphere -->
			<node name="SphereizePoints" id="217" class="643a4bdd 191e4297 a9b600fc 699b46f9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: scalar Description: Sphere factor -->
					<property name="sphere_factor">1.0</property>
				</properties>
			</node>
			<!-- String source that uses a script to create the output value -->
			<node name="StringSourceScript" id="218" class="44a411be 60a24d0d 9b9c7d8b b050835b">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: std::string Description: Output string -->
					<property name="output_string">K-3D</property>
					<!-- Type: std::string Description: Script that creates geometry -->
					<property name="script">#python

Output = "K-3D"

</property>
				</properties>
			</node>
			<!-- Subdivides edges by creating one or more vertices along -->
			<node name="SubdivideEdges" id="219" class="62de51ff e70f423a 953d899a 1dbf5c38">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: long Units: scalar Description: New vertex number (subdivisions - 1) -->
					<property name="vertices">1</property>
				</properties>
			</node>
			<!-- Subdivide faces by joining face center with vertices or edge midpoints, or contiguous midpoints -->
			<node name="SubdivideFaces" id="220" class="b9d4d815 241c473d a22d3523 406fa390">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: enumeration Values: ['center', 'centermidpoints', 'midpoints'] Description: Join : center to midpoints, midpoints, center to points -->
					<property name="subdivision_type">centermidpoints</property>
					<!-- Type: double Units: distance Description: Middle offset, for midpoints only -->
					<property name="middle_offset">0.0</property>
				</properties>
			</node>
			<!-- Tags geometry with a color -->
			<node name="TagColor" id="221" class="852e9ffb 8e8b42f3 993eb194 5c342ca4">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: k3d::color Description: New Color -->
					<property name="new_color">1.0 0.0 0.0</property>
					<!-- Type: k3d::color Description: Default Color -->
					<property name="default_color">1.0 1.0 1.0</property>
					<!-- Type: bool Description: Tag Points -->
					<property name="tag_points">0</property>
					<!-- Type: bool Description: Tag Point Groups -->
					<property name="tag_point_groups">0</property>
					<!-- Type: bool Description: Tag Edges -->
					<property name="tag_edges">0</property>
					<!-- Type: bool Description: Tag Faces -->
					<property name="tag_faces">0</property>
					<!-- Type: bool Description: Tag Polyhedra -->
					<property name="tag_polyhedra">0</property>
					<!-- Type: bool Description: Tag Linear Groups -->
					<property name="tag_linear_curve_groups">0</property>
					<!-- Type: bool Description: Tag Cubic Curve Groups -->
					<property name="tag_cubic_curve_groups">0</property>
					<!-- Type: bool Description: Tag Bilinear Patches -->
					<property name="tag_bilinear_patches">0</property>
					<!-- Type: bool Description: Tag Bicubic Patches -->
					<property name="tag_bicubic_patches">0</property>
				</properties>
			</node>
			<!-- Tapers mesh points along an axis -->
			<node name="TaperPoints" id="222" class="4d05f002 27764b67 a1a12e21 436c3d06">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Taper along this axis -->
					<property name="axis">z</property>
					<!-- Type: double Units: scalar Description: Taper factor -->
					<property name="taper_fator">0.0</property>
					<!-- Type: bool Description: Displacement on X axis -->
					<property name="displace_x">1</property>
					<!-- Type: bool Description: Displacement on Y axis -->
					<property name="displace_y">1</property>
					<!-- Type: bool Description: Displacement on Z axis -->
					<property name="displace_z">0</property>
				</properties>
			</node>
			<!-- Renders a teapot primitive in render engines that support one (Aqsis!) -->
			<node name="Teapot" id="223" class="b761f071 f7ed4297 9449028d 2f6236f0">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
				</properties>
			</node>
			<!-- Maps texture values to geometry using an external texture mapping transformation -->
			<node name="TextureMap" id="224" class="24c2872a 0f2c42b0 acfda8da bbe888d6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: k3d::inode* Description: Texture Mapping Type -->
					<property name="mapping">0</property>
					<!-- Type: enumeration Values: ['-x', '+x', '-y', '+y', '-z', '+z'] Description: Projection Axis -->
					<property name="axis">+z</property>
					<!-- Type: double Description: S0 -->
					<property name="s0">0.0</property>
					<!-- Type: double Description: S1 -->
					<property name="s1">1.0</property>
					<!-- Type: double Description: T0 -->
					<property name="t0">0.0</property>
					<!-- Type: double Description: T1 -->
					<property name="t1">1.0</property>
					<!-- Type: double Description: Default S -->
					<property name="default_s">0.0</property>
					<!-- Type: double Description: Default T -->
					<property name="default_t">0.0</property>
					<!-- Type: bool Description: Tag Points -->
					<property name="tag_points">1</property>
					<!-- Type: bool Description: Tag Edges -->
					<property name="tag_edges">0</property>
				</properties>
			</node>
			<!-- Provides a time source for a K-3D document -->
			<node name="TimeSource" id="225" class="1978f1f7 4a864c99 8caf7cfc d2591baf">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: double Units: time Description: Controls the start time (in seconds) for rendering animations. -->
					<property name="start_time">0.0</property>
					<!-- Type: double Units: time Description: Controls the end time (in seconds) for rendering animations. -->
					<property name="end_time">4.0</property>
					<!-- Type: double Units: scalar Description: Controls the frame rate (in frames-per-second) for rendering animations. -->
					<property name="frame_rate">30.0</property>
					<!-- Type: double Units: time Description: Controls the current time displayed in the viewports. -->
					<property name="time">0.0</property>
				</properties>
			</node>
			<!-- Torus primitive -->
			<node name="Torus" id="226" class="00000001 00000000 00000000 0000006a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::inode* Description: Surface material -->
					<property name="material">0</property>
					<!-- Type: bool Description: Controls whether this node will be visible in the final rendered image. -->
					<property name="render_final">1</property>
					<!-- Type: bool Description: Controls whether this node will be visible during shadow-map render passes. -->
					<property name="render_shadows">1</property>
					<!-- Type: bool Description: If enabled, this node will be rendered with motion-blur. -->
					<property name="motion_blur">0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Units: distance Description: Torus major radius -->
					<property name="majorradius">5.0</property>
					<!-- Type: double Units: distance Description: Torus minor radius -->
					<property name="minorradius">2.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="phimin">0.0</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="phimax">6.2831853072</property>
					<!-- Type: double Units: angle Description: From RenderMan specification -->
					<property name="thetamax">6.2831853072</property>
				</properties>
			</node>
			<!-- Transform modifier that uses a script to modify a transformation matrix -->
			<node name="TransformModifierScript" id="227" class="acafcc85 a0bf4d69 99592c4f 7cf9b35c">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input transformation matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: std::string Description: Script that modifies input matrix -->
					<property name="script">#python

Output = Input

</property>
					<!-- Type: k3d::matrix4 Description: Output matrix generated by the script -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Transform mesh points using input matrix -->
			<node name="TransformPoints" id="228" class="8543cf2d 170c4edc 9bf821bd e8567b6f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
				</properties>
			</node>
			<!-- Transform source that uses a script to create the output value -->
			<node name="TransformSourceScript" id="229" class="59da7a41 e08c4704 bf75055f 043628cc">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: std::string Description: Script that creates geometry -->
					<property name="script">#python

import k3d

Output = k3d.identity3()

</property>
				</properties>
			</node>
			<!-- TranslateArray1D -->
			<node name="TranslateArray1D" id="230" class="172b9170 91d2449b aa057e85 afb2c019">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: k3d::point3 Description: Offset -->
					<property name="offset">5.0 0.0 0.0</property>
				</properties>
			</node>
			<!-- TranslateArray2D -->
			<node name="TranslateArray2D" id="231" class="a2d1cd67 901e411b 9c624ca6 a02b6a5a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: k3d::point3 Description: Offset 1 -->
					<property name="offset1">5.0 0.0 0.0</property>
					<!-- Type: k3d::point3 Description: Offset 2 -->
					<property name="offset2">0.0 -5.0 0.0</property>
				</properties>
			</node>
			<!-- TranslateArray3D -->
			<node name="TranslateArray3D" id="232" class="ef028b9d 68964ef0 b09c0ff8 8c324ae4">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::inode* Description: Layout -->
					<property name="layout">0</property>
					<!-- Type: k3d::point3 Description: Offset 1 -->
					<property name="offset1">5.0 0.0 0.0</property>
					<!-- Type: k3d::point3 Description: Offset 2 -->
					<property name="offset2">0.0 -5.0 0.0</property>
					<!-- Type: k3d::point3 Description: Offset 3 -->
					<property name="offset3">0.0 0.0 5.0</property>
				</properties>
			</node>
			<!-- Translates mesh points -->
			<node name="TranslatePoints" id="233" class="460b8dac 780240a3 a2f87b5b ba0272cd">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: double Units: distance Description: X translation -->
					<property name="x">0.0</property>
					<!-- Type: double Units: distance Description: Y translation -->
					<property name="y">0.0</property>
					<!-- Type: double Units: distance Description: Z translation -->
					<property name="z">0.0</property>
				</properties>
			</node>
			<!-- Converts input faces into triangles -->
			<node name="TriangulateFaces" id="234" class="3796ae29 bcc84a5c b6bae620 87a9b1bd">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: bool Description: Triangulate only faces that contain holes -->
					<property name="holes_only">0</property>
				</properties>
			</node>
			<!-- Translates each mesh point with custom vector -->
			<node name="TweakPoints" id="235" class="ed302b87 49bf4fe6 99064963 17ec12d9">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: std::vector<k3d::point3> Description: Tweak array translates each point in a custom diretion, those values are set by the application -->
					<property name="tweaks"></property>
				</properties>
			</node>
			<!-- Twists mesh points along an axis -->
			<node name="TwistPoints" id="236" class="76051829 66b54dbf b67d7719 b2e2596f">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::mesh* Description: Input mesh -->
					<property name="input_mesh"></property>
					<!-- Type: k3d::mesh* Description: Output mesh -->
					<property name="output_mesh"></property>
					<!-- Type: k3d::mesh_selection Description: Input Mesh Selection -->
					<property name="mesh_selection"></property>
					<!-- Type: enumeration Values: ['x', 'y', 'z'] Description: Twist around given axis -->
					<property name="axis">z</property>
					<!-- Type: double Units: angle Description: Twist angle -->
					<property name="angle">0.0</property>
				</properties>
			</node>
			<!-- Vector3 source that uses a script to create the output value -->
			<node name="Vector3SourceScript" id="237" class="a4535c6e e19f4d7d 8af30edb 6e194f78">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::vector3 Description: Output vector3 -->
					<property name="output_vector3">0.0 0.0 0.0</property>
					<!-- Type: std::string Description: Script that creates vector3 -->
					<property name="script">#python

import k3d

Output = k3d.vector3()

</property>
				</properties>
			</node>
			<!-- Generates a transformation matrix from a position, a look vector, and an up vector -->
			<node name="ViewMatrix" id="238" class="8c5f4eef a858499f 83774152 147b7fe2">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Position -->
					<property name="position">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Look Position -->
					<property name="look">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Up Position -->
					<property name="up">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Read only -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
				</properties>
			</node>
			<!-- Yafray Area Light -->
			<node name="YafrayAreaLight" id="239" class="882e29b9 c62a49da 858cd48c 43815d16">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: bool Description: Emit Light -->
					<property name="emit">1</property>
					<!-- Type: k3d::color Description: Light color -->
					<property name="color">1.0 1.0 1.0</property>
					<!-- Type: double Description: Power -->
					<property name="power">20.0</property>
					<!-- Type: long Description: Samples -->
					<property name="samples">256</property>
					<!-- Type: long Description: PSamples -->
					<property name="psamples">256</property>
					<!-- Type: bool Description: Dummy (global photon) -->
					<property name="dummy">0</property>
				</properties>
			</node>
			<!-- Yafray Render Engine -->
			<node name="YafrayEngine" id="240" class="ef38bf93 66654f9f 992ca91b 62bae139">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: enumeration Values: ['', '320x240', '480x360', '640x480', '800x600', '1024x768', '1280x960', '1600x1200', '32x32', '64x64', '128x128', '256x256', '512x512', '1024x1024', 'Full Camera Aperture (1K)', 'Full Camera Aperture (2K)', 'Full Camera Aperture (4K)', 'Academy Full Frame (1K)', 'Academy Full Frame (2K)', 'Academy Full Frame (4K)', 'Academy Projection 1.66 (1K)', 'Academy Projection 1.66 (2K)', 'Academy Projection 1.66 (4K)', 'Academy Projection 1.85 (1K)', 'Academy Projection 1.85 (2K)', 'Academy Projection 1.85 (4K)', 'Anamorphic Squeezed (1K)', 'Anamorphic Squeezed (2K)', 'Anamorphic Squeezed (4K)', 'Anamorphic Unsqueezed (1K)', 'Anamorphic Unsqueezed (2K)', 'Anamorphic Unsqueezed (4K)'] Description: Choose a predefined image resolution -->
					<property name="resolution"></property>
					<!-- Type: long Units: scalar Description: Output pixel width -->
					<property name="pixel_width">320</property>
					<!-- Type: long Units: scalar Description: Output pixel height -->
					<property name="pixel_height">240</property>
					<!-- Type: long Units: scalar Description: AA passes -->
					<property name="AA_passes">3</property>
					<!-- Type: long Units: scalar Description: AA min samples -->
					<property name="AA_minsamples">2</property>
					<!-- Type: double Description: AA pixelwidth -->
					<property name="AA_pixelwidth">1.5</property>
					<!-- Type: double Description: AA threshold -->
					<property name="AA_threshold">0.05</property>
					<!-- Type: long Units: scalar Description: raydepth -->
					<property name="raydepth">3</property>
					<!-- Type: double Description: bias -->
					<property name="bias">0.1</property>
					<!-- Type: bool Description: Save alpha -->
					<property name="save_alpha">0</property>
					<!-- Type: double Description: exposure -->
					<property name="exposure">0.0</property>
					<!-- Type: double Description: gamma -->
					<property name="gamma">1.0</property>
					<!-- Type: double Description: fog_density -->
					<property name="fog_density">0.0</property>
					<!-- Type: k3d::color Description: Fog color -->
					<property name="fog_color">1.0 1.0 1.0</property>
					<!-- Type: bool Description: Show SDS Surfaces -->
					<property name="preview_sds">1</property>
				</properties>
			</node>
			<!-- Yafray Global Photon Light -->
			<node name="YafrayGlobalPhotonLight" id="241" class="8c651262 2e2d4fcc bb20f617 f0c56f41">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: bool Description: Emit Light -->
					<property name="emit">1</property>
					<!-- Type: long Description: Photons -->
					<property name="photons">2000</property>
					<!-- Type: long Description: Depth -->
					<property name="depth">1</property>
					<!-- Type: long Description: Search -->
					<property name="search">100</property>
					<!-- Type: double Description: Radius -->
					<property name="radius">2.0</property>
				</properties>
			</node>
			<!-- Yafray Hemi Light -->
			<node name="YafrayHemiLight" id="242" class="a0661dc7 52cd4990 8e6a0aa8 87bdd89d">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Emit Light -->
					<property name="emit">1</property>
					<!-- Type: k3d::color Description: Light color -->
					<property name="color">0.9 0.9 1.0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Description: Power -->
					<property name="power">2.0</property>
					<!-- Type: long Description: Samples -->
					<property name="samples">256</property>
					<!-- Type: bool Description: Use QMC -->
					<property name="use_QMC">0</property>
					<!-- Type: double Description: Max. distance -->
					<property name="maxdistance">-1.0</property>
				</properties>
			</node>
			<!-- Yafray Material -->
			<node name="YafrayMaterial" id="243" class="4b767ac5 19ec4182 9883cc81 3f091dea">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::color Description: Color -->
					<property name="color">1.0 1.0 1.0</property>
					<!-- Type: k3d::color Description: Specular Color -->
					<property name="specular_color">1.0 1.0 1.0</property>
					<!-- Type: k3d::color Description: Reflected Color -->
					<property name="reflected_color">0.0 0.0 0.0</property>
					<!-- Type: k3d::color Description: Transmitted Color -->
					<property name="transmitted_color">0.0 0.0 0.0</property>
					<!-- Type: double Description: Hardness -->
					<property name="hardness">10.0</property>
					<!-- Type: double Description: Index of Refraction -->
					<property name="index_of_refraction">1.0</property>
					<!-- Type: double Description: Minimum Reflection -->
					<property name="minimum_reflection">0.0</property>
					<!-- Type: bool Description: Fast fresnel -->
					<property name="fast_fresnel">0</property>
					<!-- Type: bool Description: Shadow -->
					<property name="shadow">1</property>
					<!-- Type: bool Description: emit_rad -->
					<property name="emit_rad">1</property>
					<!-- Type: bool Description: recv_rad -->
					<property name="recv_rad">1</property>
					<!-- Type: bool Description: Caustics -->
					<property name="caustics">0</property>
					<!-- Type: double Description: caus_IOR -->
					<property name="caus_IOR">1.0</property>
					<!-- Type: k3d::color Description: caus_rcolor -->
					<property name="caus_rcolor">0.0 0.0 0.0</property>
					<!-- Type: k3d::color Description: caus_tcolor -->
					<property name="caus_tcolor">0.0 0.0 0.0</property>
					<!-- Type: bool Description: Mesh autosmooth -->
					<property name="mesh_autosmooth">0</property>
					<!-- Type: double Description: Mesh autosmooth value -->
					<property name="mesh_autosmooth_value">60.0</property>
					<!-- Type: bool Description: Has orco -->
					<property name="has_orco">0</property>
				</properties>
			</node>
			<!-- Yafray Photon Light -->
			<node name="YafrayPhotonLight" id="244" class="2b90ffa5 9360411b bd982d69 e3f45f31">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: bool Description: Emit Light -->
					<property name="emit">1</property>
					<!-- Type: long Description: Photons -->
					<property name="photons">2000</property>
					<!-- Type: long Description: Depth -->
					<property name="depth">1</property>
					<!-- Type: long Description: Search -->
					<property name="search">100</property>
					<!-- Type: k3d::color Description: Light color -->
					<property name="color">1.0 1.0 1.0</property>
					<!-- Type: double Description: Power -->
					<property name="power">100.0</property>
					<!-- Type: enumeration Values: ['diffuse', 'caustic'] Description: Mode -->
					<property name="mode">diffuse</property>
					<!-- Type: double Description: Fixed Radius -->
					<property name="fixedradius">0.1</property>
					<!-- Type: double Description: Cluster -->
					<property name="cluster">0.1</property>
					<!-- Type: bool Description: Use QMC -->
					<property name="use_QMC">0</property>
					<!-- Type: double Description: Angle -->
					<property name="angle">0.5235987756</property>
					<!-- Type: long Description: Min. depth -->
					<property name="mindepth">1</property>
					<!-- Type: double Description: Bias -->
					<property name="bias">0.001</property>
				</properties>
			</node>
			<!-- Yafray Point Light -->
			<node name="YafrayPointLight" id="245" class="d693bb64 d73943ce 80852061 24fd242e">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Emit Light -->
					<property name="emit">1</property>
					<!-- Type: k3d::color Description: Light color -->
					<property name="color">1.0 1.0 1.0</property>
					<!-- Type: bool Description: Cast shadows -->
					<property name="cast_shadows">1</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Description: Power -->
					<property name="power">400.0</property>
				</properties>
			</node>
			<!-- Yafray Soft Light -->
			<node name="YafraySoftLight" id="246" class="2fcaffb5 ed294a0d 82133a8f 48df4988">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Emit Light -->
					<property name="emit">1</property>
					<!-- Type: k3d::color Description: Light color -->
					<property name="color">1.0 1.0 1.0</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Description: Power -->
					<property name="power">400.0</property>
					<!-- Type: double Description: Softness -->
					<property name="radius">5.0</property>
					<!-- Type: long Description: Shadowmap resolution -->
					<property name="resolution">256</property>
					<!-- Type: double Description: Shadowmap bias -->
					<property name="bias">0.01</property>
					<!-- Type: double Description: Glow intensity -->
					<property name="glow_intensity">0.0</property>
					<!-- Type: long Description: Glow type -->
					<property name="glow_type">0</property>
					<!-- Type: double Description: Glow offset -->
					<property name="glow_offset">0.0</property>
				</properties>
			</node>
			<!-- Yafray Spot Light -->
			<node name="YafraySpotLight" id="247" class="5e363371 f8464895 99f0ddf0 4e26ee4a">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: bool Description: Emit Light -->
					<property name="emit">1</property>
					<!-- Type: k3d::color Description: Light color -->
					<property name="color">1.0 1.0 1.0</property>
					<!-- Type: double Description: Power -->
					<property name="power">400.0</property>
					<!-- Type: double Description: Angle -->
					<property name="size">0.5235987756</property>
					<!-- Type: double Description: Edge softness -->
					<property name="nblend">5.0</property>
					<!-- Type: double Description: Beam falloff -->
					<property name="beam_falloff">10.0</property>
				</properties>
			</node>
			<!-- Yafray Sun Light -->
			<node name="YafraySunLight" id="248" class="9a48777d a68345b5 acb9fc07 8af3e7f6">
				<properties>
					<!-- Type: double Description: Node selection state, 1 = selected, 0 = unselected. -->
					<property name="selection_weight">0.0</property>
					<!-- Type: k3d::matrix4 Description: Input matrix -->
					<property name="input_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: k3d::matrix4 Description: Output Matrix -->
					<property name="output_matrix">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</property>
					<!-- Type: bool Description: Emit Light -->
					<property name="emit">1</property>
					<!-- Type: k3d::color Description: Light color -->
					<property name="color">1.0 1.0 1.0</property>
					<!-- Type: bool Description: Cast shadows -->
					<property name="cast_shadows">1</property>
					<!-- Type: bool Description: Controls whether this node will be visibile in the viewport. -->
					<property name="viewport_visible">1</property>
					<!-- Type: double Description: Power -->
					<property name="power">40.0</property>
				</properties>
			</node>
		</nodes>
	</document>
</k3dml>
