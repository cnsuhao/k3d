PROJECT(k3dsdk-expression)

FILE(GLOB HEADERS *.h)
FILE(GLOB SOURCES *.cpp)

IF(CMAKE_HAS_SORT)
	LIST(SORT HEADERS)
	LIST(SORT SOURCES)
ENDIF(CMAKE_HAS_SORT)

INCLUDE_DIRECTORIES(${k3d_SOURCE_DIR})

ADD_LIBRARY(k3dsdk-expression SHARED ${HEADERS} ${SOURCES})
K3D_GENERATE_DEF_FILE(k3dsdk-expression)

TARGET_LINK_LIBRARIES(k3dsdk-expression k3dsdk)

INSTALL(TARGETS k3dsdk-expression
	RUNTIME DESTINATION bin
	LIBRARY DESTINATION lib
	ARCHIVE DESTINATION lib)

PROJECT(k3dsdk-expression)

FILE(GLOB HEADERS *.h)
FILE(GLOB SOURCES *.cpp)

IF(CMAKE_HAS_SORT)
	LIST(SORT HEADERS)
	LIST(SORT SOURCES)
ENDIF(CMAKE_HAS_SORT)

INCLUDE_DIRECTORIES(${k3d_SOURCE_DIR})

ADD_LIBRARY(k3dsdk-expression SHARED ${HEADERS} ${SOURCES})
K3D_GENERATE_DEF_FILE(k3dsdk-expression)

TARGET_LINK_LIBRARIES(k3dsdk-expression k3dsdk)

INSTALL(TARGETS k3dsdk-expression
	RUNTIME DESTINATION bin
	LIBRARY DESTINATION lib
	ARCHIVE DESTINATION lib)

