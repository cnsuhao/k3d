#!/bin/sh

STAGING="@CMAKE_CURRENT_BINARY_DIR@/staging"
BUNDLE="$STAGING/K-3D.app"
CONTENTS="$BUNDLE/Contents"
DISK_IMAGE="@CMAKE_CURRENT_BINARY_DIR@/K-3D-@K3D_VERSION@-@CMAKE_SYSTEM_PROCESSOR@.dmg"

# Cleanup old files
rm -rvf "$STAGING"
rm -rvf "$DISK_IMAGE"

# Create the bundle ...

# Setup wrapper script ...
mkdir -p "$CONTENTS/MacOS"
cp -v "@CMAKE_CURRENT_SOURCE_DIR@/k3d-startup" "$CONTENTS/MacOS/K-3D"
chmod a+x "$CONTENTS/MacOS/K-3D"

# Copy binary executables ...
mkdir -p "$CONTENTS/Resources/bin"
cp -v "@k3d_BINARY_DIR@/bin/k3d" "$CONTENTS/Resources/bin"
cp -v "@k3d_BINARY_DIR@/bin/k3d-bug-buddy" "$CONTENTS/Resources/bin"
cp -v "@k3d_BINARY_DIR@/bin/k3d-make-module-proxy" "$CONTENTS/Resources/bin"
cp -v "@k3d_BINARY_DIR@/bin/k3d-renderframe" "$CONTENTS/Resources/bin"
cp -v "@k3d_BINARY_DIR@/bin/k3d-renderjob" "$CONTENTS/Resources/bin"
cp -v "@k3d_BINARY_DIR@/bin/k3d-sl2xml" "$CONTENTS/Resources/bin"
cp -v "@k3d_BINARY_DIR@/bin/k3d-uuidgen" "$CONTENTS/Resources/bin"

# Strip binary executables ...
strip -ur "$CONTENTS/Resources/bin/*"

# Copy our X11-startup helper script ...
cp -v "@CMAKE_CURRENT_SOURCE_DIR@/getdisplay.sh" "$CONTENTS/Resources/bin"
chmod a+x "$CONTENTS/Resources/bin/getdisplay.sh"

# Copy K-3D libraries and plugins ...
cp -v -r "@k3d_BINARY_DIR@/lib" "$CONTENTS/Resources"

# Copy K-3D dependencies ...
cp -v "/opt/local/lib/libXrender.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libatk-1.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libatkmm-1.6.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libboost_program_options-1_34_1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libboost_python-1_34_1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libboost_regex-1_34_1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libcairo.2.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libcairomm-1.0.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libexpat.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libfontconfig.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libfreetype.6.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgdk-x11-2.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgdk_pixbuf-2.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgdkglext-x11-1.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgdkmm-2.4.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libglib-2.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libglibmm-2.4.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgmodule-2.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgobject-2.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgtk-x11-2.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgtkglext-x11-1.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libgtkmm-2.4.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libiconv.2.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libintl.8.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libjpeg.62.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libpango-1.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libpangocairo-1.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libpangoft2-1.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libpangomm-1.4.1.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libpangox-1.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libpng12.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libsigc-2.0.0.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libtiff.3.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libuuid.15.dylib" "$CONTENTS/Resources/lib"
cp -v "/opt/local/lib/libz.1.dylib" "$CONTENTS/Resources/lib"

cp -v -r "/opt/local/lib/pango" "$CONTENTS/Resources/lib"

# Strip libraries ...
strip -x "$CONTENTS/Resources/lib/*.dylib"
strip -x "$CONTENTS/Resources/lib/plugins/*.module"
strip -x "$CONTENTS/Resources/lib/uiplugins/*.module"

# Copy configuration files ...
mkdir -p "$CONTENTS/Resources/etc"

mkdir -p "$CONTENTS/Resources/etc/pango"
cp -v "/opt/local/etc/pango/pangorc" "$CONTENTS/Resources/etc/pango"
cp -v "/opt/local/etc/pango/pango.modules" "$CONTENTS/Resources/etc/pango"
cp -v "/opt/local/etc/pango/pangox.aliases" "$CONTENTS/Resources/etc/pango"

mkdir -p "$CONTENTS/Resources/etc/fonts"
cp -v "/opt/local/etc/fonts/fonts.conf" "$CONTENTS/Resources/etc/fonts"
cp -v "/opt/local/etc/fonts/fonts.dtd" "$CONTENTS/Resources/etc/fonts"

# Setup the bundle icon ...
cp -v "@k3d_SOURCE_DIR@/share/icons/k3d.icns" "$CONTENTS/Resources/K-3D.icns"

# Setup the bundle metadata file ...
cp -v "@CMAKE_CURRENT_BINARY_DIR@/Info.plist" "$CONTENTS"

# Copy shared files ...
cp -v -r "@k3d_SOURCE_DIR@/share" "$CONTENTS/Resources"

# Get rid of those pesky .svn directories ...
rm -rf $(find "$CONTENTS" -name ".svn")

# Add a link to /Applications so users can drag-and-drop the bundle into it
ln -sf /Applications "$STAGING"

# Add a custom volume icon ...
cp -v "@CMAKE_CURRENT_SOURCE_DIR@/volume.icns" "$STAGING/.VolumeIcon.icns"

# Create a temporary read-write disk image ...
echo "Creating disk image ..."
TEMP_IMAGE="@CMAKE_CURRENT_BINARY_DIR@/temp.dmg"
hdiutil create -ov -srcfolder "$STAGING" -volname "K-3D @K3D_VERSION@" -format UDRW "$TEMP_IMAGE"

# Set the custom icon flag for the image ...
TEMP_MOUNT="@CMAKE_CURRENT_BINARY_DIR@/mnt"
mkdir -p "$TEMP_MOUNT"
hdiutil attach -mountpoint "$TEMP_MOUNT" "$TEMP_IMAGE"
/Developer/Tools/SetFile -a C "$TEMP_MOUNT"
hdiutil detach "$TEMP_MOUNT"

# Create the final compressed read-only disk image ...
echo "Compressing disk image ..."
hdiutil convert "$TEMP_IMAGE" -format UDZO -imagekey zlib-level=9 -o "$DISK_IMAGE"

